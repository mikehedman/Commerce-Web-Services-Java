package com.ipcommerce.schemas.cws.v2_0.serviceinformation;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * <summary>
 *             SIS public interface
 *             </summary>
 *
 * This class was generated by Apache CXF 2.7.0
 * 2012-10-25T15:02:10.644-06:00
 * Generated source version: 2.7.0
 * 
 */
@WebService(targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", name = "ICWSServiceInformation")
@XmlSeeAlso({com.ipcommerce.schemas.ipc_general_wcf_contracts.ObjectFactory.class, com.ipcommerce.schemas.cws.v2_0.serviceinformation.faults.ObjectFactory.class, ObjectFactory.class, com.microsoft.schemas._2003._10.serialization.ObjectFactory.class, com.ipcommerce.schemas.ipc_general_wcf_contracts_common.external.ObjectFactory.class, com.ipcommerce.schemas.identity._1.ObjectFactory.class, org.w3._2001.xmlschema.ObjectFactory.class, com.microsoft.schemas._2003._10.serialization.arrays.ObjectFactory.class})
public interface ICWSServiceInformation {

    /**
     * <summary>
     *             Retrieves the merchant profile associated with a specific Service ID and Tender Type.
     *             </summary>
     *             <param name="sessionToken">Session token</param>
     *             <param name="merchantProfileId">Merchant profile ID</param>
     *             <param name="serviceId">Service ID</param>
     *             <param name="tenderType">Tender type</param>
     *             <returns>The requested merchant profile</returns>
     */
    @WebResult(name = "GetMerchantProfileResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfile", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfileResponse", fault = {@FaultAction(className = ICWSServiceInformationGetMerchantProfileCWSServiceInformationUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfileCWSServiceInformationUnavailableFaultFault"), @FaultAction(className = ICWSServiceInformationGetMerchantProfileInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfileInvalidTokenFaultFault"), @FaultAction(className = ICWSServiceInformationGetMerchantProfileAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfileAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationGetMerchantProfileCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfileCWSValidationResultFaultFault"), @FaultAction(className = ICWSServiceInformationGetMerchantProfileCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfileCWSFaultFault"), @FaultAction(className = ICWSServiceInformationGetMerchantProfileExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfileExpiredTokenFaultFault")})
    @RequestWrapper(localName = "GetMerchantProfile", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.GetMerchantProfile")
    @WebMethod(operationName = "GetMerchantProfile", action = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfile")
    @ResponseWrapper(localName = "GetMerchantProfileResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.GetMerchantProfileResponse")
    public com.ipcommerce.schemas.cws.v2_0.serviceinformation.MerchantProfile getMerchantProfile(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String sessionToken,
        @WebParam(name = "merchantProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String merchantProfileId,
        @WebParam(name = "serviceId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String serviceId,
        @WebParam(name = "tenderType", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        com.ipcommerce.schemas.cws.v2_0.serviceinformation.TenderType tenderType
    ) throws ICWSServiceInformationGetMerchantProfileCWSServiceInformationUnavailableFaultFaultFaultMessage, ICWSServiceInformationGetMerchantProfileInvalidTokenFaultFaultFaultMessage, ICWSServiceInformationGetMerchantProfileAuthenticationFaultFaultFaultMessage, ICWSServiceInformationGetMerchantProfileCWSValidationResultFaultFaultFaultMessage, ICWSServiceInformationGetMerchantProfileCWSFaultFaultFaultMessage, ICWSServiceInformationGetMerchantProfileExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Retrieves all current application configuration data associated with the Service Key.
     *             </summary>
     *             <param name="sessionToken">Session token</param>
     *             <param name="applicationProfileId">Application profile ID returned from SaveApplicationData()</param>
     *             <returns>Application common configuration data associated with the session token</returns>
     */
    @WebResult(name = "GetApplicationDataResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetApplicationData", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetApplicationDataResponse", fault = {@FaultAction(className = ICWSServiceInformationGetApplicationDataCWSServiceInformationUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetApplicationDataCWSServiceInformationUnavailableFaultFault"), @FaultAction(className = ICWSServiceInformationGetApplicationDataInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetApplicationDataInvalidTokenFaultFault"), @FaultAction(className = ICWSServiceInformationGetApplicationDataAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetApplicationDataAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationGetApplicationDataCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetApplicationDataCWSValidationResultFaultFault"), @FaultAction(className = ICWSServiceInformationGetApplicationDataCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetApplicationDataCWSFaultFault"), @FaultAction(className = ICWSServiceInformationGetApplicationDataExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetApplicationDataExpiredTokenFaultFault")})
    @RequestWrapper(localName = "GetApplicationData", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.GetApplicationData")
    @WebMethod(operationName = "GetApplicationData", action = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetApplicationData")
    @ResponseWrapper(localName = "GetApplicationDataResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.GetApplicationDataResponse")
    public com.ipcommerce.schemas.cws.v2_0.serviceinformation.ApplicationData getApplicationData(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String sessionToken,
        @WebParam(name = "applicationProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String applicationProfileId
    ) throws ICWSServiceInformationGetApplicationDataCWSServiceInformationUnavailableFaultFaultFaultMessage, ICWSServiceInformationGetApplicationDataInvalidTokenFaultFaultFaultMessage, ICWSServiceInformationGetApplicationDataAuthenticationFaultFaultFaultMessage, ICWSServiceInformationGetApplicationDataCWSValidationResultFaultFaultFaultMessage, ICWSServiceInformationGetApplicationDataCWSFaultFaultFaultMessage, ICWSServiceInformationGetApplicationDataExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Save application configuration data.
     *             </summary>
     *             <param name="sessionToken">Session token</param>
     *             <param name="applicationData">Application common configuration data</param>
     *             <returns>Application profile ID</returns>
     */
    @WebResult(name = "SaveApplicationDataResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SaveApplicationData", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SaveApplicationDataResponse", fault = {@FaultAction(className = ICWSServiceInformationSaveApplicationDataCWSServiceInformationUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SaveApplicationDataCWSServiceInformationUnavailableFaultFault"), @FaultAction(className = ICWSServiceInformationSaveApplicationDataInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SaveApplicationDataInvalidTokenFaultFault"), @FaultAction(className = ICWSServiceInformationSaveApplicationDataAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SaveApplicationDataAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationSaveApplicationDataCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SaveApplicationDataCWSValidationResultFaultFault"), @FaultAction(className = ICWSServiceInformationSaveApplicationDataCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SaveApplicationDataCWSFaultFault"), @FaultAction(className = ICWSServiceInformationSaveApplicationDataExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SaveApplicationDataExpiredTokenFaultFault")})
    @RequestWrapper(localName = "SaveApplicationData", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.SaveApplicationData")
    @WebMethod(operationName = "SaveApplicationData", action = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SaveApplicationData")
    @ResponseWrapper(localName = "SaveApplicationDataResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.SaveApplicationDataResponse")
    public java.lang.String saveApplicationData(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String sessionToken,
        @WebParam(name = "applicationData", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        com.ipcommerce.schemas.cws.v2_0.serviceinformation.ApplicationData applicationData
    ) throws ICWSServiceInformationSaveApplicationDataCWSServiceInformationUnavailableFaultFaultFaultMessage, ICWSServiceInformationSaveApplicationDataInvalidTokenFaultFaultFaultMessage, ICWSServiceInformationSaveApplicationDataAuthenticationFaultFaultFaultMessage, ICWSServiceInformationSaveApplicationDataCWSValidationResultFaultFaultFaultMessage, ICWSServiceInformationSaveApplicationDataCWSFaultFaultFaultMessage, ICWSServiceInformationSaveApplicationDataExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Deletes a specific merchant profile for a Tender Type.
     *             </summary>
     *             <param name="sessionToken">Session token</param>
     *             <param name="merchantProfileId">Merchant profile ID</param>
     *             <param name="serviceId">Service ID</param>
     *             <param name="tenderType">Tender type</param>
     */
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DeleteMerchantProfile", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DeleteMerchantProfileResponse", fault = {@FaultAction(className = ICWSServiceInformationDeleteMerchantProfileCWSServiceInformationUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DeleteMerchantProfileCWSServiceInformationUnavailableFaultFault"), @FaultAction(className = ICWSServiceInformationDeleteMerchantProfileInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DeleteMerchantProfileInvalidTokenFaultFault"), @FaultAction(className = ICWSServiceInformationDeleteMerchantProfileAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DeleteMerchantProfileAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationDeleteMerchantProfileCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DeleteMerchantProfileCWSValidationResultFaultFault"), @FaultAction(className = ICWSServiceInformationDeleteMerchantProfileCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DeleteMerchantProfileCWSFaultFault"), @FaultAction(className = ICWSServiceInformationDeleteMerchantProfileExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DeleteMerchantProfileExpiredTokenFaultFault")})
    @RequestWrapper(localName = "DeleteMerchantProfile", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.DeleteMerchantProfile")
    @WebMethod(operationName = "DeleteMerchantProfile", action = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DeleteMerchantProfile")
    @ResponseWrapper(localName = "DeleteMerchantProfileResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.DeleteMerchantProfileResponse")
    public void deleteMerchantProfile(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String sessionToken,
        @WebParam(name = "merchantProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String merchantProfileId,
        @WebParam(name = "serviceId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String serviceId,
        @WebParam(name = "tenderType", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        com.ipcommerce.schemas.cws.v2_0.serviceinformation.TenderType tenderType
    ) throws ICWSServiceInformationDeleteMerchantProfileCWSServiceInformationUnavailableFaultFaultFaultMessage, ICWSServiceInformationDeleteMerchantProfileInvalidTokenFaultFaultFaultMessage, ICWSServiceInformationDeleteMerchantProfileAuthenticationFaultFaultFaultMessage, ICWSServiceInformationDeleteMerchantProfileCWSValidationResultFaultFaultFaultMessage, ICWSServiceInformationDeleteMerchantProfileCWSFaultFaultFaultMessage, ICWSServiceInformationDeleteMerchantProfileExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Validates a provided merchant proifile. If the profile is invalid, the operation will throw a 
     *             CWSValidationResultFault containing the details of the exception. If your application does not implement 
     *             unmanaged merchant profiles – you do not need to call this method.  Your merchant profile will automatically 
     *             be validated when you call SaveMerchantProfiles.
     *             </summary>
     *             <param name="sessionToken">The session token associated with this call.</param>
     *             <param name="serviceId">The service id of record for the profile.</param>
     *             <param name="tenderType">The tender type of record for the profile.</param>
     *             <param name="merchantProfile">The merchant profile.</param>
     */
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ValidateMerchantProfile", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ValidateMerchantProfileResponse", fault = {@FaultAction(className = ICWSServiceInformationValidateMerchantProfileCWSServiceInformationUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ValidateMerchantProfileCWSServiceInformationUnavailableFaultFault"), @FaultAction(className = ICWSServiceInformationValidateMerchantProfileInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ValidateMerchantProfileInvalidTokenFaultFault"), @FaultAction(className = ICWSServiceInformationValidateMerchantProfileAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ValidateMerchantProfileAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationValidateMerchantProfileCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ValidateMerchantProfileCWSValidationResultFaultFault"), @FaultAction(className = ICWSServiceInformationValidateMerchantProfileCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ValidateMerchantProfileCWSFaultFault"), @FaultAction(className = ICWSServiceInformationValidateMerchantProfileExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ValidateMerchantProfileExpiredTokenFaultFault")})
    @RequestWrapper(localName = "ValidateMerchantProfile", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.ValidateMerchantProfile")
    @WebMethod(operationName = "ValidateMerchantProfile", action = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ValidateMerchantProfile")
    @ResponseWrapper(localName = "ValidateMerchantProfileResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.ValidateMerchantProfileResponse")
    public void validateMerchantProfile(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String sessionToken,
        @WebParam(name = "serviceId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String serviceId,
        @WebParam(name = "tenderType", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        com.ipcommerce.schemas.cws.v2_0.serviceinformation.TenderType tenderType,
        @WebParam(name = "merchantProfile", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        com.ipcommerce.schemas.cws.v2_0.serviceinformation.MerchantProfile merchantProfile
    ) throws ICWSServiceInformationValidateMerchantProfileCWSServiceInformationUnavailableFaultFaultFaultMessage, ICWSServiceInformationValidateMerchantProfileInvalidTokenFaultFaultFaultMessage, ICWSServiceInformationValidateMerchantProfileAuthenticationFaultFaultFaultMessage, ICWSServiceInformationValidateMerchantProfileCWSValidationResultFaultFaultFaultMessage, ICWSServiceInformationValidateMerchantProfileCWSFaultFaultFaultMessage, ICWSServiceInformationValidateMerchantProfileExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Saves one or more merchant profiles for a Tender Type.
     *             </summary>
     *             <param name="sessionToken">Session token</param>
     *             <param name="serviceId">Service ID</param>
     *             <param name="tenderType">Tender type</param>
     *             <param name="merchantProfiles">Merchant profiles</param>
     */
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SaveMerchantProfiles", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SaveMerchantProfilesResponse", fault = {@FaultAction(className = ICWSServiceInformationSaveMerchantProfilesCWSServiceInformationUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SaveMerchantProfilesCWSServiceInformationUnavailableFaultFault"), @FaultAction(className = ICWSServiceInformationSaveMerchantProfilesInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SaveMerchantProfilesInvalidTokenFaultFault"), @FaultAction(className = ICWSServiceInformationSaveMerchantProfilesAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SaveMerchantProfilesAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationSaveMerchantProfilesCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SaveMerchantProfilesCWSValidationResultFaultFault"), @FaultAction(className = ICWSServiceInformationSaveMerchantProfilesCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SaveMerchantProfilesCWSFaultFault"), @FaultAction(className = ICWSServiceInformationSaveMerchantProfilesExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SaveMerchantProfilesExpiredTokenFaultFault")})
    @RequestWrapper(localName = "SaveMerchantProfiles", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.SaveMerchantProfiles")
    @WebMethod(operationName = "SaveMerchantProfiles", action = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SaveMerchantProfiles")
    @ResponseWrapper(localName = "SaveMerchantProfilesResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.SaveMerchantProfilesResponse")
    public void saveMerchantProfiles(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String sessionToken,
        @WebParam(name = "serviceId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String serviceId,
        @WebParam(name = "tenderType", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        com.ipcommerce.schemas.cws.v2_0.serviceinformation.TenderType tenderType,
        @WebParam(name = "merchantProfiles", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        com.ipcommerce.schemas.cws.v2_0.serviceinformation.ArrayOfMerchantProfile merchantProfiles
    ) throws ICWSServiceInformationSaveMerchantProfilesCWSServiceInformationUnavailableFaultFaultFaultMessage, ICWSServiceInformationSaveMerchantProfilesInvalidTokenFaultFaultFaultMessage, ICWSServiceInformationSaveMerchantProfilesAuthenticationFaultFaultFaultMessage, ICWSServiceInformationSaveMerchantProfilesCWSValidationResultFaultFaultFaultMessage, ICWSServiceInformationSaveMerchantProfilesCWSFaultFaultFaultMessage, ICWSServiceInformationSaveMerchantProfilesExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *              Allow a service key identity token holder to receive a session token with some claims sourced from an 
     *              external domain token and add dynamic claims as allowed for their service key
     *             </summary>
     *              <param name="identityToken">Identity token associated with your service key</param>
     *             <param name="externalDomainToken">external domain token containing claims to add to session token</param>
     *             <param name="claims">claims to add to the generated session token</param>
     *             <returns>session token</returns>
     */
    @WebResult(name = "FederatedSignOnAndAddClaimsResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
    @Action(input = "http://schemas.ipcommerce.com/Identity/2.0/MultiTokenCred/FederatedSignOnAndAddClaims", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/FederatedSignOnAndAddClaimsResponse", fault = {@FaultAction(className = ICWSServiceInformationFederatedSignOnAndAddClaimsClaimMappingsNotFoundFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/FederatedSignOnAndAddClaimsClaimMappingsNotFoundFaultFault"), @FaultAction(className = ICWSServiceInformationFederatedSignOnAndAddClaimsInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/FederatedSignOnAndAddClaimsInvalidTokenFaultFault"), @FaultAction(className = ICWSServiceInformationFederatedSignOnAndAddClaimsSystemFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/FederatedSignOnAndAddClaimsSystemFaultFault"), @FaultAction(className = ICWSServiceInformationFederatedSignOnAndAddClaimsAuthorizationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/FederatedSignOnAndAddClaimsAuthorizationFaultFault"), @FaultAction(className = ICWSServiceInformationFederatedSignOnAndAddClaimsAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/FederatedSignOnAndAddClaimsAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationFederatedSignOnAndAddClaimsExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/FederatedSignOnAndAddClaimsExpiredTokenFaultFault")})
    @RequestWrapper(localName = "FederatedSignOnAndAddClaims", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.FederatedSignOnAndAddClaims")
    @WebMethod(operationName = "FederatedSignOnAndAddClaims", action = "http://schemas.ipcommerce.com/Identity/2.0/MultiTokenCred/FederatedSignOnAndAddClaims")
    @ResponseWrapper(localName = "FederatedSignOnAndAddClaimsResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.FederatedSignOnAndAddClaimsResponse")
    public java.lang.String federatedSignOnAndAddClaims(
        @WebParam(name = "identityToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String identityToken,
        @WebParam(name = "externalDomainToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String externalDomainToken,
        @WebParam(name = "claims", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        com.ipcommerce.schemas.identity._1.ArrayOfClaimMetaData claims
    ) throws ICWSServiceInformationFederatedSignOnAndAddClaimsClaimMappingsNotFoundFaultFaultFaultMessage, ICWSServiceInformationFederatedSignOnAndAddClaimsInvalidTokenFaultFaultFaultMessage, ICWSServiceInformationFederatedSignOnAndAddClaimsSystemFaultFaultFaultMessage, ICWSServiceInformationFederatedSignOnAndAddClaimsAuthorizationFaultFaultFaultMessage, ICWSServiceInformationFederatedSignOnAndAddClaimsAuthenticationFaultFaultFaultMessage, ICWSServiceInformationFederatedSignOnAndAddClaimsExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Deletes application configuration data.
     *             </summary>
     *             <param name="sessionToken">Session token</param>
     *             <param name="applicationProfileId">Application profile ID</param>
     */
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DeleteApplicationData", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DeleteApplicationDataResponse", fault = {@FaultAction(className = ICWSServiceInformationDeleteApplicationDataCWSServiceInformationUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DeleteApplicationDataCWSServiceInformationUnavailableFaultFault"), @FaultAction(className = ICWSServiceInformationDeleteApplicationDataInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DeleteApplicationDataInvalidTokenFaultFault"), @FaultAction(className = ICWSServiceInformationDeleteApplicationDataAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DeleteApplicationDataAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationDeleteApplicationDataCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DeleteApplicationDataCWSValidationResultFaultFault"), @FaultAction(className = ICWSServiceInformationDeleteApplicationDataCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DeleteApplicationDataCWSFaultFault"), @FaultAction(className = ICWSServiceInformationDeleteApplicationDataExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DeleteApplicationDataExpiredTokenFaultFault")})
    @RequestWrapper(localName = "DeleteApplicationData", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.DeleteApplicationData")
    @WebMethod(operationName = "DeleteApplicationData", action = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DeleteApplicationData")
    @ResponseWrapper(localName = "DeleteApplicationDataResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.DeleteApplicationDataResponse")
    public void deleteApplicationData(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String sessionToken,
        @WebParam(name = "applicationProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String applicationProfileId
    ) throws ICWSServiceInformationDeleteApplicationDataCWSServiceInformationUnavailableFaultFaultFaultMessage, ICWSServiceInformationDeleteApplicationDataInvalidTokenFaultFaultFaultMessage, ICWSServiceInformationDeleteApplicationDataAuthenticationFaultFaultFaultMessage, ICWSServiceInformationDeleteApplicationDataCWSValidationResultFaultFaultFaultMessage, ICWSServiceInformationDeleteApplicationDataCWSFaultFaultFaultMessage, ICWSServiceInformationDeleteApplicationDataExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Sign on using an identity token.
     *             </summary>
     *             <param name="identityToken">Identity token associated with your service key</param>
     *             <returns>Session token</returns>
     */
    @WebResult(name = "SignOnWithTokenResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SignOnWithToken", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SignOnWithTokenResponse", fault = {@FaultAction(className = ICWSServiceInformationSignOnWithTokenInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SignOnWithTokenInvalidTokenFaultFault"), @FaultAction(className = ICWSServiceInformationSignOnWithTokenSTSUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SignOnWithTokenSTSUnavailableFaultFault"), @FaultAction(className = ICWSServiceInformationSignOnWithTokenAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SignOnWithTokenAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationSignOnWithTokenCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SignOnWithTokenCWSFaultFault"), @FaultAction(className = ICWSServiceInformationSignOnWithTokenExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SignOnWithTokenExpiredTokenFaultFault")})
    @RequestWrapper(localName = "SignOnWithToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.SignOnWithToken")
    @WebMethod(operationName = "SignOnWithToken", action = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SignOnWithToken")
    @ResponseWrapper(localName = "SignOnWithTokenResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.SignOnWithTokenResponse")
    public java.lang.String signOnWithToken(
        @WebParam(name = "identityToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String identityToken
    ) throws ICWSServiceInformationSignOnWithTokenInvalidTokenFaultFaultFaultMessage, ICWSServiceInformationSignOnWithTokenSTSUnavailableFaultFaultFaultMessage, ICWSServiceInformationSignOnWithTokenAuthenticationFaultFaultFaultMessage, ICWSServiceInformationSignOnWithTokenCWSFaultFaultFaultMessage, ICWSServiceInformationSignOnWithTokenExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Reset the password for the specified service key and username.
     *             </summary>
     *             <param name="serviceKey">Service key</param>
     *             <param name="userName">User name associated with specified service key</param>
     */
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ResetPasswordForServiceKey", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ResetPasswordForServiceKeyResponse", fault = {@FaultAction(className = ICWSServiceInformationResetPasswordForServiceKeyGeneratePasswordFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ResetPasswordForServiceKeyGeneratePasswordFaultFault"), @FaultAction(className = ICWSServiceInformationResetPasswordForServiceKeyAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ResetPasswordForServiceKeyAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationResetPasswordForServiceKeySendEmailFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ResetPasswordForServiceKeySendEmailFaultFault"), @FaultAction(className = ICWSServiceInformationResetPasswordForServiceKeySTSUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ResetPasswordForServiceKeySTSUnavailableFaultFault")})
    @RequestWrapper(localName = "ResetPasswordForServiceKey", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.ResetPasswordForServiceKey")
    @WebMethod(operationName = "ResetPasswordForServiceKey", action = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ResetPasswordForServiceKey")
    @ResponseWrapper(localName = "ResetPasswordForServiceKeyResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.ResetPasswordForServiceKeyResponse")
    public void resetPasswordForServiceKey(
        @WebParam(name = "serviceKey", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String serviceKey,
        @WebParam(name = "userName", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String userName
    ) throws ICWSServiceInformationResetPasswordForServiceKeyGeneratePasswordFaultFaultFaultMessage, ICWSServiceInformationResetPasswordForServiceKeyAuthenticationFaultFaultFaultMessage, ICWSServiceInformationResetPasswordForServiceKeySendEmailFaultFaultFaultMessage, ICWSServiceInformationResetPasswordForServiceKeySTSUnavailableFaultFaultFaultMessage;

    /**
     * <summary>
     *             Retrieve service information.
     *             </summary>
     *             <param name="sessionToken">Session token</param>
     *             <returns>Service information associated with the session token</returns>
     */
    @WebResult(name = "GetServiceInformationResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetServiceInformation", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetServiceInformationResponse", fault = {@FaultAction(className = ICWSServiceInformationGetServiceInformationCWSServiceInformationUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetServiceInformationCWSServiceInformationUnavailableFaultFault"), @FaultAction(className = ICWSServiceInformationGetServiceInformationInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetServiceInformationInvalidTokenFaultFault"), @FaultAction(className = ICWSServiceInformationGetServiceInformationAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetServiceInformationAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationGetServiceInformationCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetServiceInformationCWSFaultFault"), @FaultAction(className = ICWSServiceInformationGetServiceInformationExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetServiceInformationExpiredTokenFaultFault")})
    @RequestWrapper(localName = "GetServiceInformation", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.GetServiceInformation")
    @WebMethod(operationName = "GetServiceInformation", action = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetServiceInformation")
    @ResponseWrapper(localName = "GetServiceInformationResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.GetServiceInformationResponse")
    public com.ipcommerce.schemas.cws.v2_0.serviceinformation.ServiceInformation getServiceInformation(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String sessionToken
    ) throws ICWSServiceInformationGetServiceInformationCWSServiceInformationUnavailableFaultFaultFaultMessage, ICWSServiceInformationGetServiceInformationInvalidTokenFaultFaultFaultMessage, ICWSServiceInformationGetServiceInformationAuthenticationFaultFaultFaultMessage, ICWSServiceInformationGetServiceInformationCWSFaultFaultFaultMessage, ICWSServiceInformationGetServiceInformationExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *              Allow a service key identity token holder to receive a session token with some claims sourced from an external domain token
     *             </summary>
     *              <param name="identityToken">Identity token associated with your service key</param>
     *             <param name="externalDomainToken">external domain token containing claims to add to session token</param>
     *             <returns>session token</returns>
     */
    @WebResult(name = "FederatedSignOnResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
    @Action(input = "http://schemas.ipcommerce.com/Identity/2.0/MultiTokenCred/FederatedSignOn", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/FederatedSignOnResponse", fault = {@FaultAction(className = ICWSServiceInformationFederatedSignOnClaimMappingsNotFoundFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/FederatedSignOnClaimMappingsNotFoundFaultFault"), @FaultAction(className = ICWSServiceInformationFederatedSignOnInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/FederatedSignOnInvalidTokenFaultFault"), @FaultAction(className = ICWSServiceInformationFederatedSignOnSystemFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/FederatedSignOnSystemFaultFault"), @FaultAction(className = ICWSServiceInformationFederatedSignOnAuthorizationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/FederatedSignOnAuthorizationFaultFault"), @FaultAction(className = ICWSServiceInformationFederatedSignOnAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/FederatedSignOnAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationFederatedSignOnExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/FederatedSignOnExpiredTokenFaultFault")})
    @RequestWrapper(localName = "FederatedSignOn", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.FederatedSignOn")
    @WebMethod(operationName = "FederatedSignOn", action = "http://schemas.ipcommerce.com/Identity/2.0/MultiTokenCred/FederatedSignOn")
    @ResponseWrapper(localName = "FederatedSignOnResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.FederatedSignOnResponse")
    public java.lang.String federatedSignOn(
        @WebParam(name = "identityToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String identityToken,
        @WebParam(name = "externalDomainToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String externalDomainToken
    ) throws ICWSServiceInformationFederatedSignOnClaimMappingsNotFoundFaultFaultFaultMessage, ICWSServiceInformationFederatedSignOnInvalidTokenFaultFaultFaultMessage, ICWSServiceInformationFederatedSignOnSystemFaultFaultFaultMessage, ICWSServiceInformationFederatedSignOnAuthorizationFaultFaultFaultMessage, ICWSServiceInformationFederatedSignOnAuthenticationFaultFaultFaultMessage, ICWSServiceInformationFederatedSignOnExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Change the username for the specified service key and username.
     *             </summary>
     *             <param name="serviceKey">Service key</param>
     *             <param name="userName">Username associated with specified service key</param>
     *             <param name="password">Password associated with specified service key and username</param>
     */
    @WebResult(name = "GetPasswordExpirationForServiceKeyResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetPasswordExpirationForServiceKey", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetPasswordExpirationForServiceKeyResponse", fault = {@FaultAction(className = ICWSServiceInformationGetPasswordExpirationForServiceKeyAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetPasswordExpirationForServiceKeyAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationGetPasswordExpirationForServiceKeyUserNotFoundFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetPasswordExpirationForServiceKeyUserNotFoundFaultFault"), @FaultAction(className = ICWSServiceInformationGetPasswordExpirationForServiceKeySTSUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetPasswordExpirationForServiceKeySTSUnavailableFaultFault")})
    @RequestWrapper(localName = "GetPasswordExpirationForServiceKey", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.GetPasswordExpirationForServiceKey")
    @WebMethod(operationName = "GetPasswordExpirationForServiceKey", action = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetPasswordExpirationForServiceKey")
    @ResponseWrapper(localName = "GetPasswordExpirationForServiceKeyResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.GetPasswordExpirationForServiceKeyResponse")
    public java.util.Calendar getPasswordExpirationForServiceKey(
        @WebParam(name = "serviceKey", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String serviceKey,
        @WebParam(name = "userName", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String userName,
        @WebParam(name = "password", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String password
    ) throws ICWSServiceInformationGetPasswordExpirationForServiceKeyAuthenticationFaultFaultFaultMessage, ICWSServiceInformationGetPasswordExpirationForServiceKeyUserNotFoundFaultFaultFaultMessage, ICWSServiceInformationGetPasswordExpirationForServiceKeySTSUnavailableFaultFaultFaultMessage;

    /**
     * <summary>
     *              Allows an initiator (IDT) to receive a session token for onBehalf SK and add dynamic claims as 
     *              allowed for their service key
     *             </summary>
     *              <param name="identityToken">Identity token associated with your service key</param>
     *             <param name="onBehalfOfSk">service key to generate session token for.</param>
     *             <param name="claims">claims to add to the generated session token</param>
     *             <returns>session token</returns>
     */
    @WebResult(name = "DelegatedSignOnResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
    @Action(input = "http://schemas.ipcommerce.com/Identity/2.0/TokenCred/DelegatedSignOn", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DelegatedSignOnResponse", fault = {@FaultAction(className = ICWSServiceInformationDelegatedSignOnClaimMappingsNotFoundFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DelegatedSignOnClaimMappingsNotFoundFaultFault"), @FaultAction(className = ICWSServiceInformationDelegatedSignOnInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DelegatedSignOnInvalidTokenFaultFault"), @FaultAction(className = ICWSServiceInformationDelegatedSignOnSystemFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DelegatedSignOnSystemFaultFault"), @FaultAction(className = ICWSServiceInformationDelegatedSignOnAuthorizationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DelegatedSignOnAuthorizationFaultFault"), @FaultAction(className = ICWSServiceInformationDelegatedSignOnAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DelegatedSignOnAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationDelegatedSignOnExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/DelegatedSignOnExpiredTokenFaultFault")})
    @RequestWrapper(localName = "DelegatedSignOn", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.DelegatedSignOn")
    @WebMethod(operationName = "DelegatedSignOn", action = "http://schemas.ipcommerce.com/Identity/2.0/TokenCred/DelegatedSignOn")
    @ResponseWrapper(localName = "DelegatedSignOnResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.DelegatedSignOnResponse")
    public java.lang.String delegatedSignOn(
        @WebParam(name = "identityToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String identityToken,
        @WebParam(name = "onBehalfOfSk", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String onBehalfOfSk,
        @WebParam(name = "claims", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        com.ipcommerce.schemas.identity._1.ArrayOfClaimMetaData claims
    ) throws ICWSServiceInformationDelegatedSignOnClaimMappingsNotFoundFaultFaultFaultMessage, ICWSServiceInformationDelegatedSignOnInvalidTokenFaultFaultFaultMessage, ICWSServiceInformationDelegatedSignOnSystemFaultFaultFaultMessage, ICWSServiceInformationDelegatedSignOnAuthorizationFaultFaultFaultMessage, ICWSServiceInformationDelegatedSignOnAuthenticationFaultFaultFaultMessage, ICWSServiceInformationDelegatedSignOnExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Get a list of claims, within a specific list of claim namespaces, given a pair of security tokens. The claims returned are presented as a list of values that are sequenced to collate with the order of the 
     *             list of namespaces passed in.
     *             </summary>
     *             <param name="authenticatingToken">This security token is used to authorize the request by verifying the 'verifiedToken' and extract claims data from it.</param>
     *             <param name="verifiedToken">The security token that will yield the claims data.</param>
     *             <param name="claimNSs">A list of claims namespaces to limit the list of claims returned. The returned list if claim values will be in the same order as specified in this list.</param>
     *             <returns>A list of claims values.</returns>
     */
    @WebResult(name = "GetClaimsResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
    @Action(input = "http://schemas.ipcommerce.com/Identity/1.0/GetClaims", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetClaimsResponse", fault = {@FaultAction(className = ICWSServiceInformationGetClaimsClaimNotFoundFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetClaimsClaimNotFoundFaultFault"), @FaultAction(className = ICWSServiceInformationGetClaimsInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetClaimsInvalidTokenFaultFault"), @FaultAction(className = ICWSServiceInformationGetClaimsAuthorizationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetClaimsAuthorizationFaultFault"), @FaultAction(className = ICWSServiceInformationGetClaimsSTSUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetClaimsSTSUnavailableFaultFault"), @FaultAction(className = ICWSServiceInformationGetClaimsSystemFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetClaimsSystemFaultFault"), @FaultAction(className = ICWSServiceInformationGetClaimsAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetClaimsAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationGetClaimsRelyingPartyNotAssociatedToSecurityDomainFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetClaimsRelyingPartyNotAssociatedToSecurityDomainFaultFault"), @FaultAction(className = ICWSServiceInformationGetClaimsExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetClaimsExpiredTokenFaultFault")})
    @RequestWrapper(localName = "GetClaims", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.GetClaims")
    @WebMethod(operationName = "GetClaims", action = "http://schemas.ipcommerce.com/Identity/1.0/GetClaims")
    @ResponseWrapper(localName = "GetClaimsResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.GetClaimsResponse")
    public com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfstring getClaims(
        @WebParam(name = "authenticatingToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String authenticatingToken,
        @WebParam(name = "verifiedToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String verifiedToken,
        @WebParam(name = "claimNSs", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfstring claimNSs
    ) throws ICWSServiceInformationGetClaimsClaimNotFoundFaultFaultFaultMessage, ICWSServiceInformationGetClaimsInvalidTokenFaultFaultFaultMessage, ICWSServiceInformationGetClaimsAuthorizationFaultFaultFaultMessage, ICWSServiceInformationGetClaimsSTSUnavailableFaultFaultFaultMessage, ICWSServiceInformationGetClaimsSystemFaultFaultFaultMessage, ICWSServiceInformationGetClaimsAuthenticationFaultFaultFaultMessage, ICWSServiceInformationGetClaimsRelyingPartyNotAssociatedToSecurityDomainFaultFaultFaultMessage, ICWSServiceInformationGetClaimsExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Retrieves all merchant profiles associated with a specific Service ID and Tender Type.
     *             </summary>
     *             <param name="sessionToken">Session token</param>
     *             <param name="serviceId">Service ID</param>
     *             <param name="tenderType">Tender type</param>
     *             <returns>Collection of merchant profiles</returns>
     */
    @WebResult(name = "GetMerchantProfilesResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfiles", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfilesResponse", fault = {@FaultAction(className = ICWSServiceInformationGetMerchantProfilesCWSServiceInformationUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfilesCWSServiceInformationUnavailableFaultFault"), @FaultAction(className = ICWSServiceInformationGetMerchantProfilesInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfilesInvalidTokenFaultFault"), @FaultAction(className = ICWSServiceInformationGetMerchantProfilesAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfilesAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationGetMerchantProfilesCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfilesCWSValidationResultFaultFault"), @FaultAction(className = ICWSServiceInformationGetMerchantProfilesCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfilesCWSFaultFault"), @FaultAction(className = ICWSServiceInformationGetMerchantProfilesExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfilesExpiredTokenFaultFault")})
    @RequestWrapper(localName = "GetMerchantProfiles", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.GetMerchantProfiles")
    @WebMethod(operationName = "GetMerchantProfiles", action = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfiles")
    @ResponseWrapper(localName = "GetMerchantProfilesResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.GetMerchantProfilesResponse")
    public com.ipcommerce.schemas.cws.v2_0.serviceinformation.ArrayOfMerchantProfile getMerchantProfiles(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String sessionToken,
        @WebParam(name = "serviceId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String serviceId,
        @WebParam(name = "tenderType", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        com.ipcommerce.schemas.cws.v2_0.serviceinformation.TenderType tenderType
    ) throws ICWSServiceInformationGetMerchantProfilesCWSServiceInformationUnavailableFaultFaultFaultMessage, ICWSServiceInformationGetMerchantProfilesInvalidTokenFaultFaultFaultMessage, ICWSServiceInformationGetMerchantProfilesAuthenticationFaultFaultFaultMessage, ICWSServiceInformationGetMerchantProfilesCWSValidationResultFaultFaultFaultMessage, ICWSServiceInformationGetMerchantProfilesCWSFaultFaultFaultMessage, ICWSServiceInformationGetMerchantProfilesExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Get a list of claims given a pair of security tokens. The claims returned are presented as a list of ClaimMetaData objects which is a pairing of the claim namespace and the claim value.
     *             </summary>
     *             <param name="authenticatingToken">This security token is used to authorize the request by verifying the 'verifiedToken' and extract claims data from it.</param>
     *             <param name="verifiedToken">The security token that will yield the claims data.</param>
     *             <returns>A list of claim namespace and value pairs.</returns>
     */
    @WebResult(name = "GetAllClaimsResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
    @Action(input = "http://schemas.ipcommerce.com/Identity/1.0/GetAllClaims", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetAllClaimsResponse", fault = {@FaultAction(className = ICWSServiceInformationGetAllClaimsClaimNotFoundFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetAllClaimsClaimNotFoundFaultFault"), @FaultAction(className = ICWSServiceInformationGetAllClaimsInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetAllClaimsInvalidTokenFaultFault"), @FaultAction(className = ICWSServiceInformationGetAllClaimsAuthorizationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetAllClaimsAuthorizationFaultFault"), @FaultAction(className = ICWSServiceInformationGetAllClaimsSTSUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetAllClaimsSTSUnavailableFaultFault"), @FaultAction(className = ICWSServiceInformationGetAllClaimsSystemFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetAllClaimsSystemFaultFault"), @FaultAction(className = ICWSServiceInformationGetAllClaimsAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetAllClaimsAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationGetAllClaimsRelyingPartyNotAssociatedToSecurityDomainFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetAllClaimsRelyingPartyNotAssociatedToSecurityDomainFaultFault"), @FaultAction(className = ICWSServiceInformationGetAllClaimsExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetAllClaimsExpiredTokenFaultFault")})
    @RequestWrapper(localName = "GetAllClaims", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.GetAllClaims")
    @WebMethod(operationName = "GetAllClaims", action = "http://schemas.ipcommerce.com/Identity/1.0/GetAllClaims")
    @ResponseWrapper(localName = "GetAllClaimsResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.GetAllClaimsResponse")
    public com.ipcommerce.schemas.identity._1.ArrayOfClaimMetaData getAllClaims(
        @WebParam(name = "authenticatingToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String authenticatingToken,
        @WebParam(name = "verifiedToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String verifiedToken
    ) throws ICWSServiceInformationGetAllClaimsClaimNotFoundFaultFaultFaultMessage, ICWSServiceInformationGetAllClaimsInvalidTokenFaultFaultFaultMessage, ICWSServiceInformationGetAllClaimsAuthorizationFaultFaultFaultMessage, ICWSServiceInformationGetAllClaimsSTSUnavailableFaultFaultFaultMessage, ICWSServiceInformationGetAllClaimsSystemFaultFaultFaultMessage, ICWSServiceInformationGetAllClaimsAuthenticationFaultFaultFaultMessage, ICWSServiceInformationGetAllClaimsRelyingPartyNotAssociatedToSecurityDomainFaultFaultFaultMessage, ICWSServiceInformationGetAllClaimsExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Change the password for the specified service key and username.
     *             </summary>
     *             <param name="serviceKey">Service key</param>
     *             <param name="userName">Username associated with specified service key</param>
     *             <param name="password">Password currently associated with specified service key and username</param>
     *             <param name="newPassword">New password to associate with specified service key and username</param>
     */
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ChangePasswordForServiceKey", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ChangePasswordForServiceKeyResponse", fault = {@FaultAction(className = ICWSServiceInformationChangePasswordForServiceKeyPasswordInvalidFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ChangePasswordForServiceKeyPasswordInvalidFaultFault"), @FaultAction(className = ICWSServiceInformationChangePasswordForServiceKeySendEmailFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ChangePasswordForServiceKeySendEmailFaultFault"), @FaultAction(className = ICWSServiceInformationChangePasswordForServiceKeySTSUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ChangePasswordForServiceKeySTSUnavailableFaultFault"), @FaultAction(className = ICWSServiceInformationChangePasswordForServiceKeyAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ChangePasswordForServiceKeyAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationChangePasswordForServiceKeyUserNotFoundFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ChangePasswordForServiceKeyUserNotFoundFaultFault")})
    @RequestWrapper(localName = "ChangePasswordForServiceKey", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.ChangePasswordForServiceKey")
    @WebMethod(operationName = "ChangePasswordForServiceKey", action = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ChangePasswordForServiceKey")
    @ResponseWrapper(localName = "ChangePasswordForServiceKeyResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.ChangePasswordForServiceKeyResponse")
    public void changePasswordForServiceKey(
        @WebParam(name = "serviceKey", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String serviceKey,
        @WebParam(name = "userName", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String userName,
        @WebParam(name = "password", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String password,
        @WebParam(name = "newPassword", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String newPassword
    ) throws ICWSServiceInformationChangePasswordForServiceKeyPasswordInvalidFaultFaultFaultMessage, ICWSServiceInformationChangePasswordForServiceKeySendEmailFaultFaultFaultMessage, ICWSServiceInformationChangePasswordForServiceKeySTSUnavailableFaultFaultFaultMessage, ICWSServiceInformationChangePasswordForServiceKeyAuthenticationFaultFaultFaultMessage, ICWSServiceInformationChangePasswordForServiceKeyUserNotFoundFaultFaultFaultMessage;

    /**
     * <summary>
     *             Change the email address for the specified service key and username.
     *             </summary>
     *             <param name="serviceKey">Service key</param>
     *             <param name="userName">Username associated with specified service key</param>
     *             <param name="password">Password associated with specified service key and username</param>
     *             <param name="newEmail">New email to associate with specified service key and username</param>
     */
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ChangeEmailForServiceKey", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ChangeEmailForServiceKeyResponse", fault = {@FaultAction(className = ICWSServiceInformationChangeEmailForServiceKeyInvalidEmailFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ChangeEmailForServiceKeyInvalidEmailFaultFault"), @FaultAction(className = ICWSServiceInformationChangeEmailForServiceKeySendEmailFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ChangeEmailForServiceKeySendEmailFaultFault"), @FaultAction(className = ICWSServiceInformationChangeEmailForServiceKeySTSUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ChangeEmailForServiceKeySTSUnavailableFaultFault"), @FaultAction(className = ICWSServiceInformationChangeEmailForServiceKeyAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ChangeEmailForServiceKeyAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationChangeEmailForServiceKeyUserNotFoundFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ChangeEmailForServiceKeyUserNotFoundFaultFault")})
    @RequestWrapper(localName = "ChangeEmailForServiceKey", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.ChangeEmailForServiceKey")
    @WebMethod(operationName = "ChangeEmailForServiceKey", action = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ChangeEmailForServiceKey")
    @ResponseWrapper(localName = "ChangeEmailForServiceKeyResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.ChangeEmailForServiceKeyResponse")
    public void changeEmailForServiceKey(
        @WebParam(name = "serviceKey", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String serviceKey,
        @WebParam(name = "userName", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String userName,
        @WebParam(name = "password", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String password,
        @WebParam(name = "newEmail", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String newEmail
    ) throws ICWSServiceInformationChangeEmailForServiceKeyInvalidEmailFaultFaultFaultMessage, ICWSServiceInformationChangeEmailForServiceKeySendEmailFaultFaultFaultMessage, ICWSServiceInformationChangeEmailForServiceKeySTSUnavailableFaultFaultFaultMessage, ICWSServiceInformationChangeEmailForServiceKeyAuthenticationFaultFaultFaultMessage, ICWSServiceInformationChangeEmailForServiceKeyUserNotFoundFaultFaultFaultMessage;

    @WebResult(name = "PingResult", targetNamespace = "http://schemas.ipcommerce.com/Ipc.General.WCF.Contracts.Common")
    @Action(input = "http://schemas.ipcommerce.com/Ipc.General.WCF.Contracts.Common/IExternallyFacingStandardOperations/Ping", output = "http://schemas.ipcommerce.com/Ipc.General.WCF.Contracts.Common/IExternallyFacingStandardOperations/PingResponse")
    @RequestWrapper(localName = "Ping", targetNamespace = "http://schemas.ipcommerce.com/Ipc.General.WCF.Contracts.Common", className = "com.ipcommerce.schemas.ipc_general_wcf_contracts.Ping")
    @WebMethod(operationName = "Ping", action = "http://schemas.ipcommerce.com/Ipc.General.WCF.Contracts.Common/IExternallyFacingStandardOperations/Ping")
    @ResponseWrapper(localName = "PingResponse", targetNamespace = "http://schemas.ipcommerce.com/Ipc.General.WCF.Contracts.Common", className = "com.ipcommerce.schemas.ipc_general_wcf_contracts.PingResponse")
    public com.ipcommerce.schemas.ipc_general_wcf_contracts_common.external.PingResponse ping();

    /**
     * <summary>
     *             Retrieves all merchant profile IDs associated with a specific Service ID and Tender Type.
     *             </summary>
     *             <param name="sessionToken">Session token</param>
     *             <param name="serviceId">Service ID</param>
     *             <param name="tenderType">Tender type</param>
     *             <returns>Collection of merchant profile IDs</returns>
     */
    @WebResult(name = "GetMerchantProfileIdsResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfileIds", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfileIdsResponse", fault = {@FaultAction(className = ICWSServiceInformationGetMerchantProfileIdsCWSServiceInformationUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfileIdsCWSServiceInformationUnavailableFaultFault"), @FaultAction(className = ICWSServiceInformationGetMerchantProfileIdsInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfileIdsInvalidTokenFaultFault"), @FaultAction(className = ICWSServiceInformationGetMerchantProfileIdsAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfileIdsAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationGetMerchantProfileIdsCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfileIdsCWSValidationResultFaultFault"), @FaultAction(className = ICWSServiceInformationGetMerchantProfileIdsCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfileIdsCWSFaultFault"), @FaultAction(className = ICWSServiceInformationGetMerchantProfileIdsExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfileIdsExpiredTokenFaultFault")})
    @RequestWrapper(localName = "GetMerchantProfileIds", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.GetMerchantProfileIds")
    @WebMethod(operationName = "GetMerchantProfileIds", action = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfileIds")
    @ResponseWrapper(localName = "GetMerchantProfileIdsResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.GetMerchantProfileIdsResponse")
    public com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfstring getMerchantProfileIds(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String sessionToken,
        @WebParam(name = "serviceId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String serviceId,
        @WebParam(name = "tenderType", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        com.ipcommerce.schemas.cws.v2_0.serviceinformation.TenderType tenderType
    ) throws ICWSServiceInformationGetMerchantProfileIdsCWSServiceInformationUnavailableFaultFaultFaultMessage, ICWSServiceInformationGetMerchantProfileIdsInvalidTokenFaultFaultFaultMessage, ICWSServiceInformationGetMerchantProfileIdsAuthenticationFaultFaultFaultMessage, ICWSServiceInformationGetMerchantProfileIdsCWSValidationResultFaultFaultFaultMessage, ICWSServiceInformationGetMerchantProfileIdsCWSFaultFaultFaultMessage, ICWSServiceInformationGetMerchantProfileIdsExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Sign on using a username and password.
     *             </summary>
     *             <param name="serviceKey">Service key to sign on</param>
     *             <param name="username">Username associated with the specified service key</param>
     *             <param name="password">Password associated with the specified service key and username</param>
     *             <returns>Session token</returns>
     */
    @WebResult(name = "SignOnWithUsernamePasswordForServiceKeyResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SignOnWithUsernamePasswordForServiceKey", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SignOnWithUsernamePasswordForServiceKeyResponse", fault = {@FaultAction(className = ICWSServiceInformationSignOnWithUsernamePasswordForServiceKeyOneTimePasswordFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SignOnWithUsernamePasswordForServiceKeyOneTimePasswordFaultFault"), @FaultAction(className = ICWSServiceInformationSignOnWithUsernamePasswordForServiceKeySTSUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SignOnWithUsernamePasswordForServiceKeySTSUnavailableFaultFault"), @FaultAction(className = ICWSServiceInformationSignOnWithUsernamePasswordForServiceKeyBadAttemptThresholdExceededFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SignOnWithUsernamePasswordForServiceKeyBadAttemptThresholdExceededFaultFault"), @FaultAction(className = ICWSServiceInformationSignOnWithUsernamePasswordForServiceKeyPasswordExpiredFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SignOnWithUsernamePasswordForServiceKeyPasswordExpiredFaultFault"), @FaultAction(className = ICWSServiceInformationSignOnWithUsernamePasswordForServiceKeyAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SignOnWithUsernamePasswordForServiceKeyAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationSignOnWithUsernamePasswordForServiceKeyLockedByAdminFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SignOnWithUsernamePasswordForServiceKeyLockedByAdminFaultFault")})
    @RequestWrapper(localName = "SignOnWithUsernamePasswordForServiceKey", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.SignOnWithUsernamePasswordForServiceKey")
    @WebMethod(operationName = "SignOnWithUsernamePasswordForServiceKey", action = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SignOnWithUsernamePasswordForServiceKey")
    @ResponseWrapper(localName = "SignOnWithUsernamePasswordForServiceKeyResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.SignOnWithUsernamePasswordForServiceKeyResponse")
    public java.lang.String signOnWithUsernamePasswordForServiceKey(
        @WebParam(name = "serviceKey", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String serviceKey,
        @WebParam(name = "username", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String username,
        @WebParam(name = "password", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String password
    ) throws ICWSServiceInformationSignOnWithUsernamePasswordForServiceKeyOneTimePasswordFaultFaultFaultMessage, ICWSServiceInformationSignOnWithUsernamePasswordForServiceKeySTSUnavailableFaultFaultFaultMessage, ICWSServiceInformationSignOnWithUsernamePasswordForServiceKeyBadAttemptThresholdExceededFaultFaultFaultMessage, ICWSServiceInformationSignOnWithUsernamePasswordForServiceKeyPasswordExpiredFaultFaultFaultMessage, ICWSServiceInformationSignOnWithUsernamePasswordForServiceKeyAuthenticationFaultFaultFaultMessage, ICWSServiceInformationSignOnWithUsernamePasswordForServiceKeyLockedByAdminFaultFaultFaultMessage;

    /**
     * <summary>
     *             Retrieves a specific merchant's merchant profiles for all Service IDs and Tender Types.
     *             </summary>
     *             <param name="sessionToken">Session token</param>
     *             <param name="merchantProfileId">Merchant profile ID</param>
     *             <returns>Collection of merchant profiles</returns>
     */
    @WebResult(name = "GetMerchantProfilesByProfileIdResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfilesByProfileId", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfilesByProfileIdResponse", fault = {@FaultAction(className = ICWSServiceInformationGetMerchantProfilesByProfileIdCWSServiceInformationUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfilesByProfileIdCWSServiceInformationUnavailableFaultFault"), @FaultAction(className = ICWSServiceInformationGetMerchantProfilesByProfileIdInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfilesByProfileIdInvalidTokenFaultFault"), @FaultAction(className = ICWSServiceInformationGetMerchantProfilesByProfileIdAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfilesByProfileIdAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationGetMerchantProfilesByProfileIdCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfilesByProfileIdCWSValidationResultFaultFault"), @FaultAction(className = ICWSServiceInformationGetMerchantProfilesByProfileIdCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfilesByProfileIdCWSFaultFault"), @FaultAction(className = ICWSServiceInformationGetMerchantProfilesByProfileIdExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfilesByProfileIdExpiredTokenFaultFault")})
    @RequestWrapper(localName = "GetMerchantProfilesByProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.GetMerchantProfilesByProfileId")
    @WebMethod(operationName = "GetMerchantProfilesByProfileId", action = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/GetMerchantProfilesByProfileId")
    @ResponseWrapper(localName = "GetMerchantProfilesByProfileIdResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.GetMerchantProfilesByProfileIdResponse")
    public com.ipcommerce.schemas.cws.v2_0.serviceinformation.ArrayOfMerchantProfile getMerchantProfilesByProfileId(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String sessionToken,
        @WebParam(name = "merchantProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String merchantProfileId
    ) throws ICWSServiceInformationGetMerchantProfilesByProfileIdCWSServiceInformationUnavailableFaultFaultFaultMessage, ICWSServiceInformationGetMerchantProfilesByProfileIdInvalidTokenFaultFaultFaultMessage, ICWSServiceInformationGetMerchantProfilesByProfileIdAuthenticationFaultFaultFaultMessage, ICWSServiceInformationGetMerchantProfilesByProfileIdCWSValidationResultFaultFaultFaultMessage, ICWSServiceInformationGetMerchantProfilesByProfileIdCWSFaultFaultFaultMessage, ICWSServiceInformationGetMerchantProfilesByProfileIdExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Uses an identity token to authorize the renewal of a another, lower-level security token.
     *             </summary>
     *             <param name="authenticatingToken">An identity token that is used to authorize the renewal of the 'toRenewToken' parameter.</param>
     *             <param name="toRenewToken">A security token that is to be renewed.</param>
     *             <returns>A renewed token.</returns>
     */
    @WebResult(name = "RenewResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
    @Action(input = "http://schemas.ipcommerce.com/Identity/1.0/Renew", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/RenewResponse", fault = {@FaultAction(className = ICWSServiceInformationRenewInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/RenewInvalidTokenFaultFault"), @FaultAction(className = ICWSServiceInformationRenewAuthorizationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/RenewAuthorizationFaultFault"), @FaultAction(className = ICWSServiceInformationRenewSTSUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/RenewSTSUnavailableFaultFault"), @FaultAction(className = ICWSServiceInformationRenewSystemFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/RenewSystemFaultFault"), @FaultAction(className = ICWSServiceInformationRenewNonRenewableTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/RenewNonRenewableTokenFaultFault"), @FaultAction(className = ICWSServiceInformationRenewAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/RenewAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationRenewExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/RenewExpiredTokenFaultFault")})
    @RequestWrapper(localName = "Renew", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.Renew")
    @WebMethod(operationName = "Renew", action = "http://schemas.ipcommerce.com/Identity/1.0/Renew")
    @ResponseWrapper(localName = "RenewResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.RenewResponse")
    public java.lang.String renew(
        @WebParam(name = "authenticatingToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String authenticatingToken,
        @WebParam(name = "toRenewToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String toRenewToken
    ) throws ICWSServiceInformationRenewInvalidTokenFaultFaultFaultMessage, ICWSServiceInformationRenewAuthorizationFaultFaultFaultMessage, ICWSServiceInformationRenewSTSUnavailableFaultFaultFaultMessage, ICWSServiceInformationRenewSystemFaultFaultFaultMessage, ICWSServiceInformationRenewNonRenewableTokenFaultFaultFaultMessage, ICWSServiceInformationRenewAuthenticationFaultFaultFaultMessage, ICWSServiceInformationRenewExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Change the username for the specified service key and username.
     *             </summary>
     *             <param name="serviceKey">Service key</param>
     *             <param name="userName">Username associated with specified service key</param>
     *             <param name="password">Password associated with specified service key and username</param>
     *             <param name="newUsername">New username to associate with specified service key</param>
     */
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ChangeUsernameForServiceKey", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ChangeUsernameForServiceKeyResponse", fault = {@FaultAction(className = ICWSServiceInformationChangeUsernameForServiceKeySendEmailFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ChangeUsernameForServiceKeySendEmailFaultFault"), @FaultAction(className = ICWSServiceInformationChangeUsernameForServiceKeySTSUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ChangeUsernameForServiceKeySTSUnavailableFaultFault"), @FaultAction(className = ICWSServiceInformationChangeUsernameForServiceKeyAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ChangeUsernameForServiceKeyAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationChangeUsernameForServiceKeyUserNotFoundFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ChangeUsernameForServiceKeyUserNotFoundFaultFault")})
    @RequestWrapper(localName = "ChangeUsernameForServiceKey", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.ChangeUsernameForServiceKey")
    @WebMethod(operationName = "ChangeUsernameForServiceKey", action = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/ChangeUsernameForServiceKey")
    @ResponseWrapper(localName = "ChangeUsernameForServiceKeyResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.ChangeUsernameForServiceKeyResponse")
    public void changeUsernameForServiceKey(
        @WebParam(name = "serviceKey", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String serviceKey,
        @WebParam(name = "userName", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String userName,
        @WebParam(name = "password", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String password,
        @WebParam(name = "newUsername", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String newUsername
    ) throws ICWSServiceInformationChangeUsernameForServiceKeySendEmailFaultFaultFaultMessage, ICWSServiceInformationChangeUsernameForServiceKeySTSUnavailableFaultFaultFaultMessage, ICWSServiceInformationChangeUsernameForServiceKeyAuthenticationFaultFaultFaultMessage, ICWSServiceInformationChangeUsernameForServiceKeyUserNotFoundFaultFaultFaultMessage;

    /**
     * <summary>
     *             Tests whether merchant profile is initialized for a specific Tender Type.
     *             </summary>
     *             <param name="sessionToken">Session token</param>
     *             <param name="serviceId">Service ID</param>
     *             <param name="merchantProfileId">Merchant profile ID</param>
     *             <param name="tenderType">Tender type</param>
     *             <returns><c>true</c> if the merchant profile has been initialized</returns>
     */
    @WebResult(name = "IsMerchantProfileInitializedResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/IsMerchantProfileInitialized", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/IsMerchantProfileInitializedResponse", fault = {@FaultAction(className = ICWSServiceInformationIsMerchantProfileInitializedCWSServiceInformationUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/IsMerchantProfileInitializedCWSServiceInformationUnavailableFaultFault"), @FaultAction(className = ICWSServiceInformationIsMerchantProfileInitializedInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/IsMerchantProfileInitializedInvalidTokenFaultFault"), @FaultAction(className = ICWSServiceInformationIsMerchantProfileInitializedAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/IsMerchantProfileInitializedAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationIsMerchantProfileInitializedCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/IsMerchantProfileInitializedCWSValidationResultFaultFault"), @FaultAction(className = ICWSServiceInformationIsMerchantProfileInitializedCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/IsMerchantProfileInitializedCWSFaultFault"), @FaultAction(className = ICWSServiceInformationIsMerchantProfileInitializedExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/IsMerchantProfileInitializedExpiredTokenFaultFault")})
    @RequestWrapper(localName = "IsMerchantProfileInitialized", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.IsMerchantProfileInitialized")
    @WebMethod(operationName = "IsMerchantProfileInitialized", action = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/IsMerchantProfileInitialized")
    @ResponseWrapper(localName = "IsMerchantProfileInitializedResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.IsMerchantProfileInitializedResponse")
    public java.lang.Boolean isMerchantProfileInitialized(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String sessionToken,
        @WebParam(name = "serviceId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String serviceId,
        @WebParam(name = "merchantProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String merchantProfileId,
        @WebParam(name = "tenderType", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        com.ipcommerce.schemas.cws.v2_0.serviceinformation.TenderType tenderType
    ) throws ICWSServiceInformationIsMerchantProfileInitializedCWSServiceInformationUnavailableFaultFaultFaultMessage, ICWSServiceInformationIsMerchantProfileInitializedInvalidTokenFaultFaultFaultMessage, ICWSServiceInformationIsMerchantProfileInitializedAuthenticationFaultFaultFaultMessage, ICWSServiceInformationIsMerchantProfileInitializedCWSValidationResultFaultFaultFaultMessage, ICWSServiceInformationIsMerchantProfileInitializedCWSFaultFaultFaultMessage, ICWSServiceInformationIsMerchantProfileInitializedExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *              Allows a service key identity token holder to add dynamic claims as allowed for their service key
     *              to the resultant session token
     *             </summary>
     *              <param name="identityToken">Identity token associated with your service key</param>
     *             <param name="claims">claims to add to the generated session token</param>
     *             <returns>session token</returns>
     */
    @WebResult(name = "SignOnAndAddClaimsResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
    @Action(input = "http://schemas.ipcommerce.com/Identity/2.0/TokenCred/SignOnAndAddClaims", output = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SignOnAndAddClaimsResponse", fault = {@FaultAction(className = ICWSServiceInformationSignOnAndAddClaimsClaimMappingsNotFoundFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SignOnAndAddClaimsClaimMappingsNotFoundFaultFault"), @FaultAction(className = ICWSServiceInformationSignOnAndAddClaimsInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SignOnAndAddClaimsInvalidTokenFaultFault"), @FaultAction(className = ICWSServiceInformationSignOnAndAddClaimsSystemFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SignOnAndAddClaimsSystemFaultFault"), @FaultAction(className = ICWSServiceInformationSignOnAndAddClaimsAuthorizationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SignOnAndAddClaimsAuthorizationFaultFault"), @FaultAction(className = ICWSServiceInformationSignOnAndAddClaimsAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SignOnAndAddClaimsAuthenticationFaultFault"), @FaultAction(className = ICWSServiceInformationSignOnAndAddClaimsExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation/ICWSServiceInformation/SignOnAndAddClaimsExpiredTokenFaultFault")})
    @RequestWrapper(localName = "SignOnAndAddClaims", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.SignOnAndAddClaims")
    @WebMethod(operationName = "SignOnAndAddClaims", action = "http://schemas.ipcommerce.com/Identity/2.0/TokenCred/SignOnAndAddClaims")
    @ResponseWrapper(localName = "SignOnAndAddClaimsResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation", className = "com.ipcommerce.schemas.cws.v2_0.serviceinformation.SignOnAndAddClaimsResponse")
    public java.lang.String signOnAndAddClaims(
        @WebParam(name = "identityToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        java.lang.String identityToken,
        @WebParam(name = "claims", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/ServiceInformation")
        com.ipcommerce.schemas.identity._1.ArrayOfClaimMetaData claims
    ) throws ICWSServiceInformationSignOnAndAddClaimsClaimMappingsNotFoundFaultFaultFaultMessage, ICWSServiceInformationSignOnAndAddClaimsInvalidTokenFaultFaultFaultMessage, ICWSServiceInformationSignOnAndAddClaimsSystemFaultFaultFaultMessage, ICWSServiceInformationSignOnAndAddClaimsAuthorizationFaultFaultFaultMessage, ICWSServiceInformationSignOnAndAddClaimsAuthenticationFaultFaultFaultMessage, ICWSServiceInformationSignOnAndAddClaimsExpiredTokenFaultFaultFaultMessage;
}
