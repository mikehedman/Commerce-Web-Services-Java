package com.ipcommerce.schemas.cws.v2_0.transactionprocessing;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.7.0
 * 2012-10-25T15:03:55.495-06:00
 * Generated source version: 2.7.0
 * 
 */
@WebService(targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", name = "ICwsTransactionProcessing")
@XmlSeeAlso({com.ipcommerce.schemas.cws.v2_0.transactions.ObjectFactory.class, com.ipcommerce.schemas.cws.v2_0.transactions.faults.ObjectFactory.class, com.ipcommerce.schemas.ipc_general_wcf_contracts.ObjectFactory.class, com.ipcommerce.schemas.cws.v2_0.transactions.bankcard.pro.ObjectFactory.class, ObjectFactory.class, com.ipcommerce.schemas.ipc_general_wcf_contracts_common.external.ObjectFactory.class, com.ipcommerce.schemas.cws.v2_0.transactions.electronicchecking.ObjectFactory.class, com.microsoft.schemas._2003._10.serialization.arrays.ObjectFactory.class, com.ipcommerce.schemas.cws.v2_0.transactions.bankcard.ObjectFactory.class, com.microsoft.schemas._2003._10.serialization.ObjectFactory.class, com.ipcommerce.schemas.identity._1.ObjectFactory.class, com.ipcommerce.schemas.cws.v2_0.transactions.storedvalue.ObjectFactory.class, org.w3._2001.xmlschema.ObjectFactory.class})
public interface ICwsTransactionProcessing {

    /**
     * <summary>
     *             Used to update an existing account.
     *             </summary>
     *             <param name="sessionToken">Session token obtained from SignOn()</param>
     *             <param name="differenceData">Manage details</param>
     *             <param name="applicationProfileId">Application profile ID obtained from SaveApplicationData()</param>
     *             <param name="workflowId">Workflow ID</param>
     *             <returns></returns>
     */
    @WebResult(name = "ManageAccountByIdResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountById", output = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountByIdResponse", fault = {@FaultAction(className = ICwsTransactionProcessingManageAccountByIdCWSInvalidMessageFormatFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountByIdCWSInvalidMessageFormatFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountByIdCWSInvalidServiceInformationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountByIdCWSInvalidServiceInformationFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountByIdCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountByIdCWSFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountByIdCWSTransactionServiceUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountByIdCWSTransactionServiceUnavailableFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountByIdCWSInvalidOperationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountByIdCWSInvalidOperationFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountByIdCWSDeserializationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountByIdCWSDeserializationFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountByIdCWSConnectionFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountByIdCWSConnectionFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountByIdAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountByIdAuthenticationFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountByIdCWSOperationNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountByIdCWSOperationNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountByIdInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountByIdInvalidTokenFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountByIdCWSExtendedDataNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountByIdCWSExtendedDataNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountByIdCWSTransactionAlreadySettledFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountByIdCWSTransactionAlreadySettledFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountByIdCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountByIdCWSValidationResultFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountByIdCWSTransactionFailedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountByIdCWSTransactionFailedFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountByIdExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountByIdExpiredTokenFaultFault")})
    @RequestWrapper(localName = "ManageAccountById", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.ManageAccountById")
    @WebMethod(operationName = "ManageAccountById", action = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountById")
    @ResponseWrapper(localName = "ManageAccountByIdResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.ManageAccountByIdResponse")
    public com.ipcommerce.schemas.cws.v2_0.transactions.Response manageAccountById(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String sessionToken,
        @WebParam(name = "differenceData", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        com.ipcommerce.schemas.cws.v2_0.transactions.Manage differenceData,
        @WebParam(name = "applicationProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String applicationProfileId,
        @WebParam(name = "workflowId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String workflowId
    ) throws ICwsTransactionProcessingManageAccountByIdCWSInvalidMessageFormatFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountByIdCWSInvalidServiceInformationFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountByIdCWSFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountByIdCWSTransactionServiceUnavailableFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountByIdCWSInvalidOperationFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountByIdCWSDeserializationFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountByIdCWSConnectionFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountByIdAuthenticationFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountByIdCWSOperationNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountByIdInvalidTokenFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountByIdCWSExtendedDataNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountByIdCWSTransactionAlreadySettledFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountByIdCWSValidationResultFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountByIdCWSTransactionFailedFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountByIdExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Mark a succesfully authorized transaction for settlement by the processor.
     *             </summary>
     *             <param name="sessionToken">Session token obtained from SignOn()</param>
     *             <param name="differenceData">Capture details</param>
     *             <param name="applicationProfileId">Application profile ID obtained from SaveApplicationData()</param>
     *             <param name="workflowId">Workflow ID</param>
     *             <returns></returns>
     */
    @WebResult(name = "CaptureResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/Capture", output = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureResponse", fault = {@FaultAction(className = ICwsTransactionProcessingCaptureCWSInvalidMessageFormatFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureCWSInvalidMessageFormatFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureCWSInvalidServiceInformationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureCWSInvalidServiceInformationFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureCWSFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureCWSTransactionServiceUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureCWSTransactionServiceUnavailableFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureCWSInvalidOperationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureCWSInvalidOperationFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureCWSDeserializationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureCWSDeserializationFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureCWSConnectionFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureCWSConnectionFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAuthenticationFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureCWSOperationNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureCWSOperationNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureInvalidTokenFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureCWSExtendedDataNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureCWSExtendedDataNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureCWSTransactionAlreadySettledFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureCWSTransactionAlreadySettledFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureCWSValidationResultFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureCWSTransactionFailedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureCWSTransactionFailedFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureExpiredTokenFaultFault")})
    @RequestWrapper(localName = "Capture", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.Capture")
    @WebMethod(operationName = "Capture", action = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/Capture")
    @ResponseWrapper(localName = "CaptureResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.CaptureResponse")
    public com.ipcommerce.schemas.cws.v2_0.transactions.Response capture(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String sessionToken,
        @WebParam(name = "differenceData", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        com.ipcommerce.schemas.cws.v2_0.transactions.Capture differenceData,
        @WebParam(name = "applicationProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String applicationProfileId,
        @WebParam(name = "workflowId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String workflowId
    ) throws ICwsTransactionProcessingCaptureCWSInvalidMessageFormatFaultFaultFaultMessage, ICwsTransactionProcessingCaptureCWSInvalidServiceInformationFaultFaultFaultMessage, ICwsTransactionProcessingCaptureCWSFaultFaultFaultMessage, ICwsTransactionProcessingCaptureCWSTransactionServiceUnavailableFaultFaultFaultMessage, ICwsTransactionProcessingCaptureCWSInvalidOperationFaultFaultFaultMessage, ICwsTransactionProcessingCaptureCWSDeserializationFaultFaultFaultMessage, ICwsTransactionProcessingCaptureCWSConnectionFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAuthenticationFaultFaultFaultMessage, ICwsTransactionProcessingCaptureCWSOperationNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingCaptureInvalidTokenFaultFaultFaultMessage, ICwsTransactionProcessingCaptureCWSExtendedDataNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingCaptureCWSTransactionAlreadySettledFaultFaultFaultMessage, ICwsTransactionProcessingCaptureCWSValidationResultFaultFaultFaultMessage, ICwsTransactionProcessingCaptureCWSTransactionFailedFaultFaultFaultMessage, ICwsTransactionProcessingCaptureExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Performs a check on the cardholder's account without reserving any funds.
     *             </summary>
     *             <param name="sessionToken">Session token obtained from SignOn()</param>
     *             <param name="transaction">Transaction details</param>
     *             <param name="applicationProfileId">Application profile ID obtained from SaveApplicationData()</param>
     *             <param name="merchantProfileId">Merchant profile ID</param>
     *             <param name="workflowId">Workflow ID</param>
     *             <returns></returns>
     */
    @WebResult(name = "VerifyResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/Verify", output = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/VerifyResponse", fault = {@FaultAction(className = ICwsTransactionProcessingVerifyCWSInvalidMessageFormatFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/VerifyCWSInvalidMessageFormatFaultFault"), @FaultAction(className = ICwsTransactionProcessingVerifyCWSInvalidServiceInformationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/VerifyCWSInvalidServiceInformationFaultFault"), @FaultAction(className = ICwsTransactionProcessingVerifyCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/VerifyCWSFaultFault"), @FaultAction(className = ICwsTransactionProcessingVerifyCWSTransactionServiceUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/VerifyCWSTransactionServiceUnavailableFaultFault"), @FaultAction(className = ICwsTransactionProcessingVerifyCWSInvalidOperationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/VerifyCWSInvalidOperationFaultFault"), @FaultAction(className = ICwsTransactionProcessingVerifyCWSDeserializationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/VerifyCWSDeserializationFaultFault"), @FaultAction(className = ICwsTransactionProcessingVerifyCWSConnectionFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/VerifyCWSConnectionFaultFault"), @FaultAction(className = ICwsTransactionProcessingVerifyAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/VerifyAuthenticationFaultFault"), @FaultAction(className = ICwsTransactionProcessingVerifyCWSOperationNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/VerifyCWSOperationNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingVerifyInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/VerifyInvalidTokenFaultFault"), @FaultAction(className = ICwsTransactionProcessingVerifyCWSExtendedDataNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/VerifyCWSExtendedDataNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingVerifyCWSTransactionAlreadySettledFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/VerifyCWSTransactionAlreadySettledFaultFault"), @FaultAction(className = ICwsTransactionProcessingVerifyCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/VerifyCWSValidationResultFaultFault"), @FaultAction(className = ICwsTransactionProcessingVerifyCWSTransactionFailedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/VerifyCWSTransactionFailedFaultFault"), @FaultAction(className = ICwsTransactionProcessingVerifyExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/VerifyExpiredTokenFaultFault")})
    @RequestWrapper(localName = "Verify", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.Verify")
    @WebMethod(operationName = "Verify", action = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/Verify")
    @ResponseWrapper(localName = "VerifyResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.VerifyResponse")
    public com.ipcommerce.schemas.cws.v2_0.transactions.Response verify(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String sessionToken,
        @WebParam(name = "transaction", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        com.ipcommerce.schemas.cws.v2_0.transactions.Transaction transaction,
        @WebParam(name = "applicationProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String applicationProfileId,
        @WebParam(name = "merchantProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String merchantProfileId,
        @WebParam(name = "workflowId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String workflowId
    ) throws ICwsTransactionProcessingVerifyCWSInvalidMessageFormatFaultFaultFaultMessage, ICwsTransactionProcessingVerifyCWSInvalidServiceInformationFaultFaultFaultMessage, ICwsTransactionProcessingVerifyCWSFaultFaultFaultMessage, ICwsTransactionProcessingVerifyCWSTransactionServiceUnavailableFaultFaultFaultMessage, ICwsTransactionProcessingVerifyCWSInvalidOperationFaultFaultFaultMessage, ICwsTransactionProcessingVerifyCWSDeserializationFaultFaultFaultMessage, ICwsTransactionProcessingVerifyCWSConnectionFaultFaultFaultMessage, ICwsTransactionProcessingVerifyAuthenticationFaultFaultFaultMessage, ICwsTransactionProcessingVerifyCWSOperationNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingVerifyInvalidTokenFaultFaultFaultMessage, ICwsTransactionProcessingVerifyCWSExtendedDataNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingVerifyCWSTransactionAlreadySettledFaultFaultFaultMessage, ICwsTransactionProcessingVerifyCWSValidationResultFaultFaultFaultMessage, ICwsTransactionProcessingVerifyCWSTransactionFailedFaultFaultFaultMessage, ICwsTransactionProcessingVerifyExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Used to activate, reload, deactivate an account or to transfer the balance from another card.
     *             </summary>
     *             <param name="sessionToken">Session token obtained from SignOn()</param>
     *             <param name="transaction">Transaction details</param>
     *             <param name="applicationProfileId">Application profile ID obtained from SaveApplicationData()</param>
     *             <param name="merchantProfileId">Merchant profile ID</param>
     *             <param name="workflowId">Workflow ID</param>
     *             <returns></returns>
     */
    @WebResult(name = "ManageAccountResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccount", output = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountResponse", fault = {@FaultAction(className = ICwsTransactionProcessingManageAccountCWSInvalidMessageFormatFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountCWSInvalidMessageFormatFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountCWSInvalidServiceInformationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountCWSInvalidServiceInformationFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountCWSFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountCWSTransactionServiceUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountCWSTransactionServiceUnavailableFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountCWSInvalidOperationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountCWSInvalidOperationFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountCWSDeserializationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountCWSDeserializationFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountCWSConnectionFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountCWSConnectionFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountAuthenticationFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountCWSOperationNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountCWSOperationNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountInvalidTokenFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountCWSExtendedDataNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountCWSExtendedDataNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountCWSTransactionAlreadySettledFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountCWSTransactionAlreadySettledFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountCWSValidationResultFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountCWSTransactionFailedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountCWSTransactionFailedFaultFault"), @FaultAction(className = ICwsTransactionProcessingManageAccountExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccountExpiredTokenFaultFault")})
    @RequestWrapper(localName = "ManageAccount", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.ManageAccount")
    @WebMethod(operationName = "ManageAccount", action = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ManageAccount")
    @ResponseWrapper(localName = "ManageAccountResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.ManageAccountResponse")
    public com.ipcommerce.schemas.cws.v2_0.transactions.Response manageAccount(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String sessionToken,
        @WebParam(name = "transaction", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        com.ipcommerce.schemas.cws.v2_0.transactions.Transaction transaction,
        @WebParam(name = "applicationProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String applicationProfileId,
        @WebParam(name = "merchantProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String merchantProfileId,
        @WebParam(name = "workflowId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String workflowId
    ) throws ICwsTransactionProcessingManageAccountCWSInvalidMessageFormatFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountCWSInvalidServiceInformationFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountCWSFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountCWSTransactionServiceUnavailableFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountCWSInvalidOperationFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountCWSDeserializationFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountCWSConnectionFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountAuthenticationFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountCWSOperationNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountInvalidTokenFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountCWSExtendedDataNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountCWSTransactionAlreadySettledFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountCWSValidationResultFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountCWSTransactionFailedFaultFaultFaultMessage, ICwsTransactionProcessingManageAccountExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Performs an unlinked or 'standalone' credit to a cardholder's account from a merchant's account.
     *             </summary>
     *             <param name="sessionToken">Session token obtained from SignOn()</param>
     *             <param name="transaction">Transaction details</param>
     *             <param name="applicationProfileId">Application profile ID obtained from SaveApplicationData()</param>
     *             <param name="merchantProfileId">Merchant profile ID</param>
     *             <param name="workflowId">Workflow ID</param>
     *             <returns></returns>
     */
    @WebResult(name = "ReturnUnlinkedResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnUnlinked", output = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnUnlinkedResponse", fault = {@FaultAction(className = ICwsTransactionProcessingReturnUnlinkedCWSInvalidMessageFormatFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnUnlinkedCWSInvalidMessageFormatFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnUnlinkedCWSInvalidServiceInformationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnUnlinkedCWSInvalidServiceInformationFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnUnlinkedCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnUnlinkedCWSFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnUnlinkedCWSTransactionServiceUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnUnlinkedCWSTransactionServiceUnavailableFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnUnlinkedCWSInvalidOperationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnUnlinkedCWSInvalidOperationFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnUnlinkedCWSDeserializationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnUnlinkedCWSDeserializationFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnUnlinkedCWSConnectionFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnUnlinkedCWSConnectionFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnUnlinkedAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnUnlinkedAuthenticationFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnUnlinkedCWSOperationNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnUnlinkedCWSOperationNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnUnlinkedInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnUnlinkedInvalidTokenFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnUnlinkedCWSExtendedDataNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnUnlinkedCWSExtendedDataNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnUnlinkedCWSTransactionAlreadySettledFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnUnlinkedCWSTransactionAlreadySettledFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnUnlinkedCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnUnlinkedCWSValidationResultFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnUnlinkedCWSTransactionFailedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnUnlinkedCWSTransactionFailedFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnUnlinkedExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnUnlinkedExpiredTokenFaultFault")})
    @RequestWrapper(localName = "ReturnUnlinked", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.ReturnUnlinked")
    @WebMethod(operationName = "ReturnUnlinked", action = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnUnlinked")
    @ResponseWrapper(localName = "ReturnUnlinkedResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.ReturnUnlinkedResponse")
    public com.ipcommerce.schemas.cws.v2_0.transactions.Response returnUnlinked(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String sessionToken,
        @WebParam(name = "transaction", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        com.ipcommerce.schemas.cws.v2_0.transactions.Transaction transaction,
        @WebParam(name = "applicationProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String applicationProfileId,
        @WebParam(name = "merchantProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String merchantProfileId,
        @WebParam(name = "workflowId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String workflowId
    ) throws ICwsTransactionProcessingReturnUnlinkedCWSInvalidMessageFormatFaultFaultFaultMessage, ICwsTransactionProcessingReturnUnlinkedCWSInvalidServiceInformationFaultFaultFaultMessage, ICwsTransactionProcessingReturnUnlinkedCWSFaultFaultFaultMessage, ICwsTransactionProcessingReturnUnlinkedCWSTransactionServiceUnavailableFaultFaultFaultMessage, ICwsTransactionProcessingReturnUnlinkedCWSInvalidOperationFaultFaultFaultMessage, ICwsTransactionProcessingReturnUnlinkedCWSDeserializationFaultFaultFaultMessage, ICwsTransactionProcessingReturnUnlinkedCWSConnectionFaultFaultFaultMessage, ICwsTransactionProcessingReturnUnlinkedAuthenticationFaultFaultFaultMessage, ICwsTransactionProcessingReturnUnlinkedCWSOperationNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingReturnUnlinkedInvalidTokenFaultFaultFaultMessage, ICwsTransactionProcessingReturnUnlinkedCWSExtendedDataNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingReturnUnlinkedCWSTransactionAlreadySettledFaultFaultFaultMessage, ICwsTransactionProcessingReturnUnlinkedCWSValidationResultFaultFaultFaultMessage, ICwsTransactionProcessingReturnUnlinkedCWSTransactionFailedFaultFaultFaultMessage, ICwsTransactionProcessingReturnUnlinkedExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Mark one or more specific succesfully authorized transactions for settlement by the processor without waiting for 
     *             the settlement to complete. The Response object will indicate a successful receipt of the settlement request.
     *             </summary>
     *             <param name="sessionToken">Session token obtained from SignOn()</param>
     *             <param name="transactionIds">Transaction IDs to capture</param>
     *             <param name="differenceData">Capture details</param>
     *             <param name="applicationProfileId">Application profile ID obtained from SaveApplicationData()</param>
     *             <param name="workflowId">Workflow ID</param>
     *             <returns>Single Response object.</returns>
     */
    @WebResult(name = "CaptureSelectiveAsyncResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveAsync", output = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveAsyncResponse", fault = {@FaultAction(className = ICwsTransactionProcessingCaptureSelectiveAsyncCWSInvalidMessageFormatFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveAsyncCWSInvalidMessageFormatFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveAsyncCWSInvalidServiceInformationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveAsyncCWSInvalidServiceInformationFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveAsyncCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveAsyncCWSFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveAsyncCWSTransactionServiceUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveAsyncCWSTransactionServiceUnavailableFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveAsyncCWSInvalidOperationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveAsyncCWSInvalidOperationFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveAsyncCWSDeserializationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveAsyncCWSDeserializationFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveAsyncCWSConnectionFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveAsyncCWSConnectionFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveAsyncAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveAsyncAuthenticationFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveAsyncCWSOperationNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveAsyncCWSOperationNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveAsyncInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveAsyncInvalidTokenFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveAsyncCWSExtendedDataNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveAsyncCWSExtendedDataNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveAsyncCWSTransactionAlreadySettledFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveAsyncCWSTransactionAlreadySettledFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveAsyncCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveAsyncCWSValidationResultFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveAsyncCWSTransactionFailedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveAsyncCWSTransactionFailedFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveAsyncExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveAsyncExpiredTokenFaultFault")})
    @RequestWrapper(localName = "CaptureSelectiveAsync", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.CaptureSelectiveAsync")
    @WebMethod(operationName = "CaptureSelectiveAsync", action = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveAsync")
    @ResponseWrapper(localName = "CaptureSelectiveAsyncResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.CaptureSelectiveAsyncResponse")
    public com.ipcommerce.schemas.cws.v2_0.transactions.Response captureSelectiveAsync(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String sessionToken,
        @WebParam(name = "transactionIds", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfstring transactionIds,
        @WebParam(name = "differenceData", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        com.ipcommerce.schemas.cws.v2_0.transactions.ArrayOfCapture differenceData,
        @WebParam(name = "applicationProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String applicationProfileId,
        @WebParam(name = "workflowId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String workflowId
    ) throws ICwsTransactionProcessingCaptureSelectiveAsyncCWSInvalidMessageFormatFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveAsyncCWSInvalidServiceInformationFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveAsyncCWSFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveAsyncCWSTransactionServiceUnavailableFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveAsyncCWSInvalidOperationFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveAsyncCWSDeserializationFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveAsyncCWSConnectionFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveAsyncAuthenticationFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveAsyncCWSOperationNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveAsyncInvalidTokenFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveAsyncCWSExtendedDataNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveAsyncCWSTransactionAlreadySettledFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveAsyncCWSValidationResultFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveAsyncCWSTransactionFailedFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveAsyncExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Performs a balance inquiry on the cardholder's account to determine the current account balance.
     *             </summary>
     *             <param name="sessionToken">Session token obtained from SignOn()</param>
     *             <param name="transaction">Transaction details</param>
     *             <param name="applicationProfileId">Application profile ID obtained from SaveApplicationData()</param>
     *             <param name="merchantProfileId">Merchant profile ID</param>
     *             <param name="workflowId">Workflow ID</param>
     *             <returns></returns>
     */
    @WebResult(name = "QueryAccountResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/QueryAccount", output = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/QueryAccountResponse", fault = {@FaultAction(className = ICwsTransactionProcessingQueryAccountCWSInvalidMessageFormatFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/QueryAccountCWSInvalidMessageFormatFaultFault"), @FaultAction(className = ICwsTransactionProcessingQueryAccountCWSInvalidServiceInformationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/QueryAccountCWSInvalidServiceInformationFaultFault"), @FaultAction(className = ICwsTransactionProcessingQueryAccountCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/QueryAccountCWSFaultFault"), @FaultAction(className = ICwsTransactionProcessingQueryAccountCWSTransactionServiceUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/QueryAccountCWSTransactionServiceUnavailableFaultFault"), @FaultAction(className = ICwsTransactionProcessingQueryAccountCWSInvalidOperationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/QueryAccountCWSInvalidOperationFaultFault"), @FaultAction(className = ICwsTransactionProcessingQueryAccountCWSDeserializationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/QueryAccountCWSDeserializationFaultFault"), @FaultAction(className = ICwsTransactionProcessingQueryAccountCWSConnectionFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/QueryAccountCWSConnectionFaultFault"), @FaultAction(className = ICwsTransactionProcessingQueryAccountAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/QueryAccountAuthenticationFaultFault"), @FaultAction(className = ICwsTransactionProcessingQueryAccountCWSOperationNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/QueryAccountCWSOperationNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingQueryAccountInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/QueryAccountInvalidTokenFaultFault"), @FaultAction(className = ICwsTransactionProcessingQueryAccountCWSExtendedDataNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/QueryAccountCWSExtendedDataNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingQueryAccountCWSTransactionAlreadySettledFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/QueryAccountCWSTransactionAlreadySettledFaultFault"), @FaultAction(className = ICwsTransactionProcessingQueryAccountCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/QueryAccountCWSValidationResultFaultFault"), @FaultAction(className = ICwsTransactionProcessingQueryAccountCWSTransactionFailedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/QueryAccountCWSTransactionFailedFaultFault"), @FaultAction(className = ICwsTransactionProcessingQueryAccountExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/QueryAccountExpiredTokenFaultFault")})
    @RequestWrapper(localName = "QueryAccount", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.QueryAccount")
    @WebMethod(operationName = "QueryAccount", action = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/QueryAccount")
    @ResponseWrapper(localName = "QueryAccountResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.QueryAccountResponse")
    public com.ipcommerce.schemas.cws.v2_0.transactions.Response queryAccount(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String sessionToken,
        @WebParam(name = "transaction", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        com.ipcommerce.schemas.cws.v2_0.transactions.Transaction transaction,
        @WebParam(name = "applicationProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String applicationProfileId,
        @WebParam(name = "merchantProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String merchantProfileId,
        @WebParam(name = "workflowId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String workflowId
    ) throws ICwsTransactionProcessingQueryAccountCWSInvalidMessageFormatFaultFaultFaultMessage, ICwsTransactionProcessingQueryAccountCWSInvalidServiceInformationFaultFaultFaultMessage, ICwsTransactionProcessingQueryAccountCWSFaultFaultFaultMessage, ICwsTransactionProcessingQueryAccountCWSTransactionServiceUnavailableFaultFaultFaultMessage, ICwsTransactionProcessingQueryAccountCWSInvalidOperationFaultFaultFaultMessage, ICwsTransactionProcessingQueryAccountCWSDeserializationFaultFaultFaultMessage, ICwsTransactionProcessingQueryAccountCWSConnectionFaultFaultFaultMessage, ICwsTransactionProcessingQueryAccountAuthenticationFaultFaultFaultMessage, ICwsTransactionProcessingQueryAccountCWSOperationNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingQueryAccountInvalidTokenFaultFaultFaultMessage, ICwsTransactionProcessingQueryAccountCWSExtendedDataNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingQueryAccountCWSTransactionAlreadySettledFaultFaultFaultMessage, ICwsTransactionProcessingQueryAccountCWSValidationResultFaultFaultFaultMessage, ICwsTransactionProcessingQueryAccountCWSTransactionFailedFaultFaultFaultMessage, ICwsTransactionProcessingQueryAccountExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Performs an incremental or reversal authorization to increase or decrease the amount of an existing authorization.
     *             </summary>
     *             <param name="sessionToken">Session token obtained from SignOn()</param>
     *             <param name="differenceData">Adjustment details</param>
     *             <param name="applicationProfileId">Application profile ID obtained from SaveApplicationData()</param>
     *             <param name="workflowId">Workflow ID</param>
     *             <returns></returns>
     */
    @WebResult(name = "AdjustResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/Adjust", output = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AdjustResponse", fault = {@FaultAction(className = ICwsTransactionProcessingAdjustCWSInvalidMessageFormatFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AdjustCWSInvalidMessageFormatFaultFault"), @FaultAction(className = ICwsTransactionProcessingAdjustCWSInvalidServiceInformationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AdjustCWSInvalidServiceInformationFaultFault"), @FaultAction(className = ICwsTransactionProcessingAdjustCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AdjustCWSFaultFault"), @FaultAction(className = ICwsTransactionProcessingAdjustCWSTransactionServiceUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AdjustCWSTransactionServiceUnavailableFaultFault"), @FaultAction(className = ICwsTransactionProcessingAdjustCWSInvalidOperationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AdjustCWSInvalidOperationFaultFault"), @FaultAction(className = ICwsTransactionProcessingAdjustCWSDeserializationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AdjustCWSDeserializationFaultFault"), @FaultAction(className = ICwsTransactionProcessingAdjustCWSConnectionFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AdjustCWSConnectionFaultFault"), @FaultAction(className = ICwsTransactionProcessingAdjustAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AdjustAuthenticationFaultFault"), @FaultAction(className = ICwsTransactionProcessingAdjustCWSOperationNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AdjustCWSOperationNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingAdjustInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AdjustInvalidTokenFaultFault"), @FaultAction(className = ICwsTransactionProcessingAdjustCWSExtendedDataNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AdjustCWSExtendedDataNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingAdjustCWSTransactionAlreadySettledFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AdjustCWSTransactionAlreadySettledFaultFault"), @FaultAction(className = ICwsTransactionProcessingAdjustCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AdjustCWSValidationResultFaultFault"), @FaultAction(className = ICwsTransactionProcessingAdjustCWSTransactionFailedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AdjustCWSTransactionFailedFaultFault"), @FaultAction(className = ICwsTransactionProcessingAdjustExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AdjustExpiredTokenFaultFault")})
    @RequestWrapper(localName = "Adjust", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.Adjust")
    @WebMethod(operationName = "Adjust", action = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/Adjust")
    @ResponseWrapper(localName = "AdjustResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.AdjustResponse")
    public com.ipcommerce.schemas.cws.v2_0.transactions.Response adjust(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String sessionToken,
        @WebParam(name = "differenceData", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        com.ipcommerce.schemas.cws.v2_0.transactions.Adjust differenceData,
        @WebParam(name = "applicationProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String applicationProfileId,
        @WebParam(name = "workflowId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String workflowId
    ) throws ICwsTransactionProcessingAdjustCWSInvalidMessageFormatFaultFaultFaultMessage, ICwsTransactionProcessingAdjustCWSInvalidServiceInformationFaultFaultFaultMessage, ICwsTransactionProcessingAdjustCWSFaultFaultFaultMessage, ICwsTransactionProcessingAdjustCWSTransactionServiceUnavailableFaultFaultFaultMessage, ICwsTransactionProcessingAdjustCWSInvalidOperationFaultFaultFaultMessage, ICwsTransactionProcessingAdjustCWSDeserializationFaultFaultFaultMessage, ICwsTransactionProcessingAdjustCWSConnectionFaultFaultFaultMessage, ICwsTransactionProcessingAdjustAuthenticationFaultFaultFaultMessage, ICwsTransactionProcessingAdjustCWSOperationNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingAdjustInvalidTokenFaultFaultFaultMessage, ICwsTransactionProcessingAdjustCWSExtendedDataNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingAdjustCWSTransactionAlreadySettledFaultFaultFaultMessage, ICwsTransactionProcessingAdjustCWSValidationResultFaultFaultFaultMessage, ICwsTransactionProcessingAdjustCWSTransactionFailedFaultFaultFaultMessage, ICwsTransactionProcessingAdjustExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Mark all succesfully authorized transactions for settlement by the processor without waiting for 
     *             the settlement to complete. The Response object will indicate a successful receipt of the settlement request.
     *             </summary>
     *             <param name="sessionToken">Session token obtained from SignOn()</param>
     *             <param name="differenceData">Capture details</param>
     *             <param name="batchIds">A list of batch ids.</param>
     *             <param name="applicationProfileId">Application profile ID obtained from SaveApplicationData()</param>
     *             <param name="merchantProfileId">Merchant profile ID</param>
     *             <param name="workflowId">Workflow ID</param>
     *             <returns>Single Response object.</returns>
     */
    @WebResult(name = "CaptureAllAsyncResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllAsync", output = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllAsyncResponse", fault = {@FaultAction(className = ICwsTransactionProcessingCaptureAllAsyncCWSInvalidMessageFormatFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllAsyncCWSInvalidMessageFormatFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllAsyncCWSInvalidServiceInformationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllAsyncCWSInvalidServiceInformationFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllAsyncCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllAsyncCWSFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllAsyncCWSTransactionServiceUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllAsyncCWSTransactionServiceUnavailableFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllAsyncCWSInvalidOperationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllAsyncCWSInvalidOperationFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllAsyncCWSDeserializationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllAsyncCWSDeserializationFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllAsyncCWSConnectionFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllAsyncCWSConnectionFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllAsyncAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllAsyncAuthenticationFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllAsyncCWSOperationNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllAsyncCWSOperationNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllAsyncInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllAsyncInvalidTokenFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllAsyncCWSExtendedDataNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllAsyncCWSExtendedDataNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllAsyncCWSTransactionAlreadySettledFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllAsyncCWSTransactionAlreadySettledFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllAsyncCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllAsyncCWSValidationResultFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllAsyncCWSTransactionFailedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllAsyncCWSTransactionFailedFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllAsyncExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllAsyncExpiredTokenFaultFault")})
    @RequestWrapper(localName = "CaptureAllAsync", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.CaptureAllAsync")
    @WebMethod(operationName = "CaptureAllAsync", action = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllAsync")
    @ResponseWrapper(localName = "CaptureAllAsyncResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.CaptureAllAsyncResponse")
    public com.ipcommerce.schemas.cws.v2_0.transactions.Response captureAllAsync(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String sessionToken,
        @WebParam(name = "differenceData", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        com.ipcommerce.schemas.cws.v2_0.transactions.ArrayOfCapture differenceData,
        @WebParam(name = "batchIds", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfstring batchIds,
        @WebParam(name = "applicationProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String applicationProfileId,
        @WebParam(name = "merchantProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String merchantProfileId,
        @WebParam(name = "workflowId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String workflowId
    ) throws ICwsTransactionProcessingCaptureAllAsyncCWSInvalidMessageFormatFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllAsyncCWSInvalidServiceInformationFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllAsyncCWSFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllAsyncCWSTransactionServiceUnavailableFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllAsyncCWSInvalidOperationFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllAsyncCWSDeserializationFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllAsyncCWSConnectionFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllAsyncAuthenticationFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllAsyncCWSOperationNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllAsyncInvalidTokenFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllAsyncCWSExtendedDataNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllAsyncCWSTransactionAlreadySettledFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllAsyncCWSValidationResultFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllAsyncCWSTransactionFailedFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllAsyncExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Performs a linked credit to a cardholder's account from a merchant's account using data from the authorization.
     *             </summary>
     *             <param name="sessionToken">Session token obtained from SignOn()</param>
     *             <param name="differenceData">Return details</param>
     *             <param name="applicationProfileId">Application profile ID obtained from SaveApplicationData()</param>
     *             <param name="workflowId">Workflow ID</param>
     *             <returns></returns>
     */
    @WebResult(name = "ReturnByIdResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnById", output = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnByIdResponse", fault = {@FaultAction(className = ICwsTransactionProcessingReturnByIdCWSInvalidMessageFormatFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnByIdCWSInvalidMessageFormatFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnByIdCWSInvalidServiceInformationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnByIdCWSInvalidServiceInformationFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnByIdCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnByIdCWSFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnByIdCWSTransactionServiceUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnByIdCWSTransactionServiceUnavailableFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnByIdCWSInvalidOperationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnByIdCWSInvalidOperationFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnByIdCWSDeserializationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnByIdCWSDeserializationFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnByIdCWSConnectionFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnByIdCWSConnectionFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnByIdAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnByIdAuthenticationFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnByIdCWSOperationNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnByIdCWSOperationNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnByIdInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnByIdInvalidTokenFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnByIdCWSExtendedDataNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnByIdCWSExtendedDataNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnByIdCWSTransactionAlreadySettledFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnByIdCWSTransactionAlreadySettledFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnByIdCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnByIdCWSValidationResultFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnByIdCWSTransactionFailedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnByIdCWSTransactionFailedFaultFault"), @FaultAction(className = ICwsTransactionProcessingReturnByIdExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnByIdExpiredTokenFaultFault")})
    @RequestWrapper(localName = "ReturnById", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.ReturnById")
    @WebMethod(operationName = "ReturnById", action = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/ReturnById")
    @ResponseWrapper(localName = "ReturnByIdResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.ReturnByIdResponse")
    public com.ipcommerce.schemas.cws.v2_0.transactions.Response returnById(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String sessionToken,
        @WebParam(name = "differenceData", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        com.ipcommerce.schemas.cws.v2_0.transactions.Return differenceData,
        @WebParam(name = "applicationProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String applicationProfileId,
        @WebParam(name = "workflowId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String workflowId
    ) throws ICwsTransactionProcessingReturnByIdCWSInvalidMessageFormatFaultFaultFaultMessage, ICwsTransactionProcessingReturnByIdCWSInvalidServiceInformationFaultFaultFaultMessage, ICwsTransactionProcessingReturnByIdCWSFaultFaultFaultMessage, ICwsTransactionProcessingReturnByIdCWSTransactionServiceUnavailableFaultFaultFaultMessage, ICwsTransactionProcessingReturnByIdCWSInvalidOperationFaultFaultFaultMessage, ICwsTransactionProcessingReturnByIdCWSDeserializationFaultFaultFaultMessage, ICwsTransactionProcessingReturnByIdCWSConnectionFaultFaultFaultMessage, ICwsTransactionProcessingReturnByIdAuthenticationFaultFaultFaultMessage, ICwsTransactionProcessingReturnByIdCWSOperationNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingReturnByIdInvalidTokenFaultFaultFaultMessage, ICwsTransactionProcessingReturnByIdCWSExtendedDataNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingReturnByIdCWSTransactionAlreadySettledFaultFaultFaultMessage, ICwsTransactionProcessingReturnByIdCWSValidationResultFaultFaultFaultMessage, ICwsTransactionProcessingReturnByIdCWSTransactionFailedFaultFaultFaultMessage, ICwsTransactionProcessingReturnByIdExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Provides the mechanism to request any transactions that match given tender data.
     *             </summary>
     *             <param name="tenderData">The tender data tro match.</param>
     *             <param name="sessionToken">Session token obtained from SignOn()</param>
     *             <param name="merchantProfileId">Aids in the distinction of the transaction(s) located.</param>
     *             <returns>One or more transaction instances that match the supplied tender data.</returns>
     */
    @WebResult(name = "RequestTransactionResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/RequestTransaction", output = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/RequestTransactionResponse", fault = {@FaultAction(className = ICwsTransactionProcessingRequestTransactionCWSInvalidMessageFormatFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/RequestTransactionCWSInvalidMessageFormatFaultFault"), @FaultAction(className = ICwsTransactionProcessingRequestTransactionCWSInvalidServiceInformationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/RequestTransactionCWSInvalidServiceInformationFaultFault"), @FaultAction(className = ICwsTransactionProcessingRequestTransactionCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/RequestTransactionCWSFaultFault"), @FaultAction(className = ICwsTransactionProcessingRequestTransactionCWSTransactionServiceUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/RequestTransactionCWSTransactionServiceUnavailableFaultFault"), @FaultAction(className = ICwsTransactionProcessingRequestTransactionCWSInvalidOperationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/RequestTransactionCWSInvalidOperationFaultFault"), @FaultAction(className = ICwsTransactionProcessingRequestTransactionCWSDeserializationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/RequestTransactionCWSDeserializationFaultFault"), @FaultAction(className = ICwsTransactionProcessingRequestTransactionCWSConnectionFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/RequestTransactionCWSConnectionFaultFault"), @FaultAction(className = ICwsTransactionProcessingRequestTransactionAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/RequestTransactionAuthenticationFaultFault"), @FaultAction(className = ICwsTransactionProcessingRequestTransactionCWSOperationNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/RequestTransactionCWSOperationNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingRequestTransactionInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/RequestTransactionInvalidTokenFaultFault"), @FaultAction(className = ICwsTransactionProcessingRequestTransactionCWSExtendedDataNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/RequestTransactionCWSExtendedDataNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingRequestTransactionCWSTransactionAlreadySettledFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/RequestTransactionCWSTransactionAlreadySettledFaultFault"), @FaultAction(className = ICwsTransactionProcessingRequestTransactionCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/RequestTransactionCWSValidationResultFaultFault"), @FaultAction(className = ICwsTransactionProcessingRequestTransactionCWSTransactionFailedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/RequestTransactionCWSTransactionFailedFaultFault"), @FaultAction(className = ICwsTransactionProcessingRequestTransactionExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/RequestTransactionExpiredTokenFaultFault")})
    @RequestWrapper(localName = "RequestTransaction", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.RequestTransaction")
    @WebMethod(operationName = "RequestTransaction", action = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/RequestTransaction")
    @ResponseWrapper(localName = "RequestTransactionResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.RequestTransactionResponse")
    public com.ipcommerce.schemas.cws.v2_0.transactions.ArrayOfResponse requestTransaction(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String sessionToken,
        @WebParam(name = "merchantProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String merchantProfileId,
        @WebParam(name = "tenderData", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        com.ipcommerce.schemas.cws.v2_0.transactions.TransactionTenderData tenderData
    ) throws ICwsTransactionProcessingRequestTransactionCWSInvalidMessageFormatFaultFaultFaultMessage, ICwsTransactionProcessingRequestTransactionCWSInvalidServiceInformationFaultFaultFaultMessage, ICwsTransactionProcessingRequestTransactionCWSFaultFaultFaultMessage, ICwsTransactionProcessingRequestTransactionCWSTransactionServiceUnavailableFaultFaultFaultMessage, ICwsTransactionProcessingRequestTransactionCWSInvalidOperationFaultFaultFaultMessage, ICwsTransactionProcessingRequestTransactionCWSDeserializationFaultFaultFaultMessage, ICwsTransactionProcessingRequestTransactionCWSConnectionFaultFaultFaultMessage, ICwsTransactionProcessingRequestTransactionAuthenticationFaultFaultFaultMessage, ICwsTransactionProcessingRequestTransactionCWSOperationNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingRequestTransactionInvalidTokenFaultFaultFaultMessage, ICwsTransactionProcessingRequestTransactionCWSExtendedDataNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingRequestTransactionCWSTransactionAlreadySettledFaultFaultFaultMessage, ICwsTransactionProcessingRequestTransactionCWSValidationResultFaultFaultFaultMessage, ICwsTransactionProcessingRequestTransactionCWSTransactionFailedFaultFaultFaultMessage, ICwsTransactionProcessingRequestTransactionExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Mark one or more specific succesfully authorized transactions for settlement by the processor.
     *             </summary>
     *             <param name="sessionToken">Session token obtained from SignOn()</param>
     *             <param name="transactionIds">Transaction IDs to capture</param>
     *             <param name="differenceData">Capture details</param>
     *             <param name="applicationProfileId">Application profile ID obtained from SaveApplicationData()</param>
     *             <param name="workflowId">Workflow ID</param>
     *             <returns></returns>
     */
    @WebResult(name = "CaptureSelectiveResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelective", output = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveResponse", fault = {@FaultAction(className = ICwsTransactionProcessingCaptureSelectiveCWSInvalidMessageFormatFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveCWSInvalidMessageFormatFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveCWSInvalidServiceInformationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveCWSInvalidServiceInformationFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveCWSFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveCWSTransactionServiceUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveCWSTransactionServiceUnavailableFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveCWSInvalidOperationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveCWSInvalidOperationFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveCWSDeserializationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveCWSDeserializationFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveCWSConnectionFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveCWSConnectionFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveAuthenticationFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveCWSOperationNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveCWSOperationNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveInvalidTokenFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveCWSExtendedDataNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveCWSExtendedDataNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveCWSTransactionAlreadySettledFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveCWSTransactionAlreadySettledFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveCWSValidationResultFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveCWSTransactionFailedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveCWSTransactionFailedFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureSelectiveExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelectiveExpiredTokenFaultFault")})
    @RequestWrapper(localName = "CaptureSelective", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.CaptureSelective")
    @WebMethod(operationName = "CaptureSelective", action = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureSelective")
    @ResponseWrapper(localName = "CaptureSelectiveResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.CaptureSelectiveResponse")
    public com.ipcommerce.schemas.cws.v2_0.transactions.ArrayOfResponse captureSelective(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String sessionToken,
        @WebParam(name = "transactionIds", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfstring transactionIds,
        @WebParam(name = "differenceData", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        com.ipcommerce.schemas.cws.v2_0.transactions.ArrayOfCapture differenceData,
        @WebParam(name = "applicationProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String applicationProfileId,
        @WebParam(name = "workflowId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String workflowId
    ) throws ICwsTransactionProcessingCaptureSelectiveCWSInvalidMessageFormatFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveCWSInvalidServiceInformationFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveCWSFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveCWSTransactionServiceUnavailableFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveCWSInvalidOperationFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveCWSDeserializationFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveCWSConnectionFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveAuthenticationFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveCWSOperationNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveInvalidTokenFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveCWSExtendedDataNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveCWSTransactionAlreadySettledFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveCWSValidationResultFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveCWSTransactionFailedFaultFaultFaultMessage, ICwsTransactionProcessingCaptureSelectiveExpiredTokenFaultFaultFaultMessage;

    @WebResult(name = "PingResult", targetNamespace = "http://schemas.ipcommerce.com/Ipc.General.WCF.Contracts.Common")
    @Action(input = "http://schemas.ipcommerce.com/Ipc.General.WCF.Contracts.Common/IExternallyFacingStandardOperations/Ping", output = "http://schemas.ipcommerce.com/Ipc.General.WCF.Contracts.Common/IExternallyFacingStandardOperations/PingResponse")
    @RequestWrapper(localName = "Ping", targetNamespace = "http://schemas.ipcommerce.com/Ipc.General.WCF.Contracts.Common", className = "com.ipcommerce.schemas.ipc_general_wcf_contracts.Ping")
    @WebMethod(operationName = "Ping", action = "http://schemas.ipcommerce.com/Ipc.General.WCF.Contracts.Common/IExternallyFacingStandardOperations/Ping")
    @ResponseWrapper(localName = "PingResponse", targetNamespace = "http://schemas.ipcommerce.com/Ipc.General.WCF.Contracts.Common", className = "com.ipcommerce.schemas.ipc_general_wcf_contracts.PingResponse")
    public com.ipcommerce.schemas.ipc_general_wcf_contracts_common.external.PingResponse ping();

    /**
     * <summary>
     *             Performs a check on cardholder's funds and reserves the queried amount if sufficient funds are available, then marks the transaction for capture.
     *             </summary>
     *             <param name="sessionToken">Session token obtained from SignOn()</param>
     *             <param name="transaction">Transaction details</param>
     *             <param name="applicationProfileId">Application profile ID obtained from SaveApplicationData()</param>
     *             <param name="merchantProfileId">Merchant profile ID</param>
     *             <param name="workflowId">Workflow ID</param>
     *             <returns></returns>
     */
    @WebResult(name = "AuthorizeAndCaptureResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeAndCapture", output = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeAndCaptureResponse", fault = {@FaultAction(className = ICwsTransactionProcessingAuthorizeAndCaptureCWSInvalidMessageFormatFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeAndCaptureCWSInvalidMessageFormatFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeAndCaptureCWSInvalidServiceInformationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeAndCaptureCWSInvalidServiceInformationFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeAndCaptureCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeAndCaptureCWSFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeAndCaptureCWSTransactionServiceUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeAndCaptureCWSTransactionServiceUnavailableFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeAndCaptureCWSInvalidOperationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeAndCaptureCWSInvalidOperationFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeAndCaptureCWSDeserializationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeAndCaptureCWSDeserializationFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeAndCaptureCWSConnectionFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeAndCaptureCWSConnectionFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeAndCaptureAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeAndCaptureAuthenticationFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeAndCaptureCWSOperationNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeAndCaptureCWSOperationNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeAndCaptureInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeAndCaptureInvalidTokenFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeAndCaptureCWSExtendedDataNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeAndCaptureCWSExtendedDataNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeAndCaptureCWSTransactionAlreadySettledFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeAndCaptureCWSTransactionAlreadySettledFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeAndCaptureCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeAndCaptureCWSValidationResultFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeAndCaptureCWSTransactionFailedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeAndCaptureCWSTransactionFailedFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeAndCaptureExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeAndCaptureExpiredTokenFaultFault")})
    @RequestWrapper(localName = "AuthorizeAndCapture", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.AuthorizeAndCapture")
    @WebMethod(operationName = "AuthorizeAndCapture", action = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeAndCapture")
    @ResponseWrapper(localName = "AuthorizeAndCaptureResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.AuthorizeAndCaptureResponse")
    public com.ipcommerce.schemas.cws.v2_0.transactions.Response authorizeAndCapture(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String sessionToken,
        @WebParam(name = "transaction", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        com.ipcommerce.schemas.cws.v2_0.transactions.Transaction transaction,
        @WebParam(name = "applicationProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String applicationProfileId,
        @WebParam(name = "merchantProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String merchantProfileId,
        @WebParam(name = "workflowId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String workflowId
    ) throws ICwsTransactionProcessingAuthorizeAndCaptureCWSInvalidMessageFormatFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeAndCaptureCWSInvalidServiceInformationFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeAndCaptureCWSFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeAndCaptureCWSTransactionServiceUnavailableFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeAndCaptureCWSInvalidOperationFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeAndCaptureCWSDeserializationFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeAndCaptureCWSConnectionFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeAndCaptureAuthenticationFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeAndCaptureCWSOperationNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeAndCaptureInvalidTokenFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeAndCaptureCWSExtendedDataNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeAndCaptureCWSTransactionAlreadySettledFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeAndCaptureCWSValidationResultFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeAndCaptureCWSTransactionFailedFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeAndCaptureExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Performs a check on cardholder's funds and reserves the queried amount if sufficient funds are available. Transaction must be captured before funds transfer will occur.
     *             </summary>
     *             <param name="sessionToken">Session token obtained from SignOn()</param>
     *             <param name="transaction">Transaction details</param>
     *             <param name="applicationProfileId">Application profile ID obtained from SaveApplicationData()</param>
     *             <param name="merchantProfileId">Merchant profile ID</param>
     *             <param name="workflowId">Workflow ID</param>
     *             <returns></returns>
     */
    @WebResult(name = "AuthorizeResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/Authorize", output = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeResponse", fault = {@FaultAction(className = ICwsTransactionProcessingAuthorizeCWSInvalidMessageFormatFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeCWSInvalidMessageFormatFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeCWSInvalidServiceInformationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeCWSInvalidServiceInformationFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeCWSFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeCWSTransactionServiceUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeCWSTransactionServiceUnavailableFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeCWSInvalidOperationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeCWSInvalidOperationFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeCWSDeserializationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeCWSDeserializationFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeCWSConnectionFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeCWSConnectionFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeAuthenticationFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeCWSOperationNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeCWSOperationNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeInvalidTokenFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeCWSExtendedDataNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeCWSExtendedDataNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeCWSTransactionAlreadySettledFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeCWSTransactionAlreadySettledFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeCWSValidationResultFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeCWSTransactionFailedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeCWSTransactionFailedFaultFault"), @FaultAction(className = ICwsTransactionProcessingAuthorizeExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AuthorizeExpiredTokenFaultFault")})
    @RequestWrapper(localName = "Authorize", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.Authorize")
    @WebMethod(operationName = "Authorize", action = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/Authorize")
    @ResponseWrapper(localName = "AuthorizeResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.AuthorizeResponse")
    public com.ipcommerce.schemas.cws.v2_0.transactions.Response authorize(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String sessionToken,
        @WebParam(name = "transaction", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        com.ipcommerce.schemas.cws.v2_0.transactions.Transaction transaction,
        @WebParam(name = "applicationProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String applicationProfileId,
        @WebParam(name = "merchantProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String merchantProfileId,
        @WebParam(name = "workflowId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String workflowId
    ) throws ICwsTransactionProcessingAuthorizeCWSInvalidMessageFormatFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeCWSInvalidServiceInformationFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeCWSFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeCWSTransactionServiceUnavailableFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeCWSInvalidOperationFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeCWSDeserializationFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeCWSConnectionFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeAuthenticationFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeCWSOperationNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeInvalidTokenFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeCWSExtendedDataNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeCWSTransactionAlreadySettledFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeCWSValidationResultFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeCWSTransactionFailedFaultFaultFaultMessage, ICwsTransactionProcessingAuthorizeExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Mark a transaction acknowledged after successfully receiving a response. This is helpful for later reporting.
     *             </summary>
     *             <param name="sessionToken">Session token obtained from SignOn()</param>
     *             <param name="transactionId">Transaction ID to acknowledge</param>
     *             <param name="applicationProfileId">Application profile ID obtained from SaveApplicationData()</param>
     *             <param name="workflowId">Workflow ID</param>
     *             <returns></returns>
     */
    @WebResult(name = "AcknowledgeResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/Acknowledge", output = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AcknowledgeResponse", fault = {@FaultAction(className = ICwsTransactionProcessingAcknowledgeCWSInvalidMessageFormatFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AcknowledgeCWSInvalidMessageFormatFaultFault"), @FaultAction(className = ICwsTransactionProcessingAcknowledgeCWSInvalidServiceInformationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AcknowledgeCWSInvalidServiceInformationFaultFault"), @FaultAction(className = ICwsTransactionProcessingAcknowledgeCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AcknowledgeCWSFaultFault"), @FaultAction(className = ICwsTransactionProcessingAcknowledgeCWSTransactionServiceUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AcknowledgeCWSTransactionServiceUnavailableFaultFault"), @FaultAction(className = ICwsTransactionProcessingAcknowledgeCWSInvalidOperationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AcknowledgeCWSInvalidOperationFaultFault"), @FaultAction(className = ICwsTransactionProcessingAcknowledgeCWSDeserializationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AcknowledgeCWSDeserializationFaultFault"), @FaultAction(className = ICwsTransactionProcessingAcknowledgeCWSConnectionFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AcknowledgeCWSConnectionFaultFault"), @FaultAction(className = ICwsTransactionProcessingAcknowledgeAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AcknowledgeAuthenticationFaultFault"), @FaultAction(className = ICwsTransactionProcessingAcknowledgeCWSOperationNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AcknowledgeCWSOperationNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingAcknowledgeInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AcknowledgeInvalidTokenFaultFault"), @FaultAction(className = ICwsTransactionProcessingAcknowledgeCWSExtendedDataNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AcknowledgeCWSExtendedDataNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingAcknowledgeCWSTransactionAlreadySettledFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AcknowledgeCWSTransactionAlreadySettledFaultFault"), @FaultAction(className = ICwsTransactionProcessingAcknowledgeCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AcknowledgeCWSValidationResultFaultFault"), @FaultAction(className = ICwsTransactionProcessingAcknowledgeCWSTransactionFailedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AcknowledgeCWSTransactionFailedFaultFault"), @FaultAction(className = ICwsTransactionProcessingAcknowledgeExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/AcknowledgeExpiredTokenFaultFault")})
    @RequestWrapper(localName = "Acknowledge", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.Acknowledge")
    @WebMethod(operationName = "Acknowledge", action = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/Acknowledge")
    @ResponseWrapper(localName = "AcknowledgeResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.AcknowledgeResponse")
    public com.ipcommerce.schemas.cws.v2_0.transactions.Response acknowledge(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String sessionToken,
        @WebParam(name = "transactionId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String transactionId,
        @WebParam(name = "applicationProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String applicationProfileId,
        @WebParam(name = "workflowId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String workflowId
    ) throws ICwsTransactionProcessingAcknowledgeCWSInvalidMessageFormatFaultFaultFaultMessage, ICwsTransactionProcessingAcknowledgeCWSInvalidServiceInformationFaultFaultFaultMessage, ICwsTransactionProcessingAcknowledgeCWSFaultFaultFaultMessage, ICwsTransactionProcessingAcknowledgeCWSTransactionServiceUnavailableFaultFaultFaultMessage, ICwsTransactionProcessingAcknowledgeCWSInvalidOperationFaultFaultFaultMessage, ICwsTransactionProcessingAcknowledgeCWSDeserializationFaultFaultFaultMessage, ICwsTransactionProcessingAcknowledgeCWSConnectionFaultFaultFaultMessage, ICwsTransactionProcessingAcknowledgeAuthenticationFaultFaultFaultMessage, ICwsTransactionProcessingAcknowledgeCWSOperationNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingAcknowledgeInvalidTokenFaultFaultFaultMessage, ICwsTransactionProcessingAcknowledgeCWSExtendedDataNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingAcknowledgeCWSTransactionAlreadySettledFaultFaultFaultMessage, ICwsTransactionProcessingAcknowledgeCWSValidationResultFaultFaultFaultMessage, ICwsTransactionProcessingAcknowledgeCWSTransactionFailedFaultFaultFaultMessage, ICwsTransactionProcessingAcknowledgeExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Void or reverse an authorization in order to release cardholder funds. If transaction to be Undone is in an ErrorUnknown state, the TenderData must be set on the BankcardUndo.
     *             </summary>
     *             <param name="sessionToken">Session token obtained from SignOn()</param>
     *             <param name="differenceData">Undo details</param>
     *             <param name="applicationProfileId">Application profile ID obtained from SaveApplicationData()</param>
     *             <param name="workflowId">Workflow ID</param>
     *             <returns></returns>
     */
    @WebResult(name = "UndoResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/Undo", output = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/UndoResponse", fault = {@FaultAction(className = ICwsTransactionProcessingUndoCWSInvalidMessageFormatFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/UndoCWSInvalidMessageFormatFaultFault"), @FaultAction(className = ICwsTransactionProcessingUndoCWSInvalidServiceInformationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/UndoCWSInvalidServiceInformationFaultFault"), @FaultAction(className = ICwsTransactionProcessingUndoCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/UndoCWSFaultFault"), @FaultAction(className = ICwsTransactionProcessingUndoCWSTransactionServiceUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/UndoCWSTransactionServiceUnavailableFaultFault"), @FaultAction(className = ICwsTransactionProcessingUndoCWSInvalidOperationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/UndoCWSInvalidOperationFaultFault"), @FaultAction(className = ICwsTransactionProcessingUndoCWSDeserializationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/UndoCWSDeserializationFaultFault"), @FaultAction(className = ICwsTransactionProcessingUndoCWSConnectionFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/UndoCWSConnectionFaultFault"), @FaultAction(className = ICwsTransactionProcessingUndoAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/UndoAuthenticationFaultFault"), @FaultAction(className = ICwsTransactionProcessingUndoCWSOperationNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/UndoCWSOperationNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingUndoInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/UndoInvalidTokenFaultFault"), @FaultAction(className = ICwsTransactionProcessingUndoCWSExtendedDataNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/UndoCWSExtendedDataNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingUndoCWSTransactionAlreadySettledFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/UndoCWSTransactionAlreadySettledFaultFault"), @FaultAction(className = ICwsTransactionProcessingUndoCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/UndoCWSValidationResultFaultFault"), @FaultAction(className = ICwsTransactionProcessingUndoCWSTransactionFailedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/UndoCWSTransactionFailedFaultFault"), @FaultAction(className = ICwsTransactionProcessingUndoExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/UndoExpiredTokenFaultFault")})
    @RequestWrapper(localName = "Undo", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.Undo")
    @WebMethod(operationName = "Undo", action = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/Undo")
    @ResponseWrapper(localName = "UndoResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.UndoResponse")
    public com.ipcommerce.schemas.cws.v2_0.transactions.Response undo(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String sessionToken,
        @WebParam(name = "differenceData", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        com.ipcommerce.schemas.cws.v2_0.transactions.Undo differenceData,
        @WebParam(name = "applicationProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String applicationProfileId,
        @WebParam(name = "workflowId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String workflowId
    ) throws ICwsTransactionProcessingUndoCWSInvalidMessageFormatFaultFaultFaultMessage, ICwsTransactionProcessingUndoCWSInvalidServiceInformationFaultFaultFaultMessage, ICwsTransactionProcessingUndoCWSFaultFaultFaultMessage, ICwsTransactionProcessingUndoCWSTransactionServiceUnavailableFaultFaultFaultMessage, ICwsTransactionProcessingUndoCWSInvalidOperationFaultFaultFaultMessage, ICwsTransactionProcessingUndoCWSDeserializationFaultFaultFaultMessage, ICwsTransactionProcessingUndoCWSConnectionFaultFaultFaultMessage, ICwsTransactionProcessingUndoAuthenticationFaultFaultFaultMessage, ICwsTransactionProcessingUndoCWSOperationNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingUndoInvalidTokenFaultFaultFaultMessage, ICwsTransactionProcessingUndoCWSExtendedDataNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingUndoCWSTransactionAlreadySettledFaultFaultFaultMessage, ICwsTransactionProcessingUndoCWSValidationResultFaultFaultFaultMessage, ICwsTransactionProcessingUndoCWSTransactionFailedFaultFaultFaultMessage, ICwsTransactionProcessingUndoExpiredTokenFaultFaultFaultMessage;

    /**
     * <summary>
     *             Mark all succesfully authorized transactions for settlement by the processor.
     *             </summary>
     *             <param name="sessionToken">Session token obtained from SignOn()</param>
     *             <param name="differenceData">Capture details</param>
     *             <param name="batchIds">A list of batch ids.</param>
     *             <param name="applicationProfileId">Application profile ID obtained from SaveApplicationData()</param>
     *             <param name="merchantProfileId">Merchant profile ID</param>
     *             <param name="workflowId">Workflow ID</param>
     *             <returns></returns>
     */
    @WebResult(name = "CaptureAllResult", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
    @Action(input = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAll", output = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllResponse", fault = {@FaultAction(className = ICwsTransactionProcessingCaptureAllCWSInvalidMessageFormatFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllCWSInvalidMessageFormatFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllCWSInvalidServiceInformationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllCWSInvalidServiceInformationFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllCWSFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllCWSFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllCWSTransactionServiceUnavailableFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllCWSTransactionServiceUnavailableFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllCWSInvalidOperationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllCWSInvalidOperationFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllCWSDeserializationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllCWSDeserializationFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllCWSConnectionFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllCWSConnectionFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllAuthenticationFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllAuthenticationFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllCWSOperationNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllCWSOperationNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllInvalidTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllInvalidTokenFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllCWSExtendedDataNotSupportedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllCWSExtendedDataNotSupportedFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllCWSTransactionAlreadySettledFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllCWSTransactionAlreadySettledFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllCWSValidationResultFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllCWSValidationResultFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllCWSTransactionFailedFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllCWSTransactionFailedFaultFault"), @FaultAction(className = ICwsTransactionProcessingCaptureAllExpiredTokenFaultFaultFaultMessage.class, value = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAllExpiredTokenFaultFault")})
    @RequestWrapper(localName = "CaptureAll", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.CaptureAll")
    @WebMethod(operationName = "CaptureAll", action = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing/ICwsTransactionProcessing/CaptureAll")
    @ResponseWrapper(localName = "CaptureAllResponse", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing", className = "com.ipcommerce.schemas.cws.v2_0.transactionprocessing.CaptureAllResponse")
    public com.ipcommerce.schemas.cws.v2_0.transactions.ArrayOfResponse captureAll(
        @WebParam(name = "sessionToken", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String sessionToken,
        @WebParam(name = "differenceData", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        com.ipcommerce.schemas.cws.v2_0.transactions.ArrayOfCapture differenceData,
        @WebParam(name = "batchIds", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        com.microsoft.schemas._2003._10.serialization.arrays.ArrayOfstring batchIds,
        @WebParam(name = "applicationProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String applicationProfileId,
        @WebParam(name = "merchantProfileId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String merchantProfileId,
        @WebParam(name = "workflowId", targetNamespace = "http://schemas.ipcommerce.com/CWS/v2.0/TransactionProcessing")
        java.lang.String workflowId
    ) throws ICwsTransactionProcessingCaptureAllCWSInvalidMessageFormatFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllCWSInvalidServiceInformationFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllCWSFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllCWSTransactionServiceUnavailableFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllCWSInvalidOperationFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllCWSDeserializationFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllCWSConnectionFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllAuthenticationFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllCWSOperationNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllInvalidTokenFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllCWSExtendedDataNotSupportedFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllCWSTransactionAlreadySettledFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllCWSValidationResultFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllCWSTransactionFailedFaultFaultFaultMessage, ICwsTransactionProcessingCaptureAllExpiredTokenFaultFaultFaultMessage;
}
